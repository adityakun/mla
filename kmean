{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0917fad2-7df8-4423-b3c4-22b3556bc6b4",
   "metadata": {},
   "source": [
    "# Session 1: K Means Clustering"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "66bd0d56-0304-4c24-9b3b-3306e5196966",
   "metadata": {},
   "source": [
    "## Importing libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "881bf14a-60f8-4176-9e8b-86578ede600c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import make_blobs"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bcd9fde4-01de-4380-855a-f99f71cc2a67",
   "metadata": {},
   "source": [
    "## Accessing data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f4fab332-7516-4a39-861a-977acf46b3ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "X,y=make_blobs(n_samples=1000,n_features=2,centers=1,random_state=10)\n",
    "plt.figure(figsize=(12,9))\n",
    "\n",
    "plt.scatter(X[:,0],X[:,1]);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "66d05844-9d9a-4d69-ac2a-03af177c62ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "X,y=make_blobs(n_samples=1000,n_features=2,centers=2,random_state=10)\n",
    "plt.figure(figsize=(12,9))\n",
    "\n",
    "plt.scatter(X[:,0],X[:,1]);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "74708064-e451-424b-a3aa-f530e96241a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "X,y=make_blobs(n_samples=1000,n_features=2,centers=4,random_state=10)\n",
    "plt.figure(figsize=(12,9))\n",
    "\n",
    "plt.scatter(X[:,0],X[:,1]);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5831bcd2-5ecd-45fc-9860-27a79d9161dd",
   "metadata": {},
   "source": [
    "## Finding the value of k"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e54a356a-3f79-483c-bef8-2743ac8f358f",
   "metadata": {},
   "source": [
    "### 1) Using Elbow method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b4af60e3-5fcb-4e34-98d0-f841a01c6ae6",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "\n",
    "SSD=[]\n",
    "for k in range(1,25):\n",
    "    k_means=KMeans(n_clusters=k,random_state=10)\n",
    "    k_means.fit(X)\n",
    "    SSD.append(k_means.inertia_)\n",
    "plt.plot(range(1,25),SSD);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ccbecf75-e59d-48b4-89dd-f9c75b88f614",
   "metadata": {},
   "outputs": [],
   "source": [
    "# The value of k=4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0466366b-32c1-415a-a52c-79145bdccf40",
   "metadata": {},
   "source": [
    "### 2) Using silhouette method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a036e29e-d7d6-4439-b9ca-d6c9c32bb8de",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import silhouette_score\n",
    "SS=[]\n",
    "for k in range(2,25):\n",
    "    k_means=KMeans(n_clusters=k,random_state=10)\n",
    "    k_means.fit(X)\n",
    "    SS.append(silhouette_score(X,k_means.predict(X)))\n",
    "plt.plot(range(2,25),SS);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b7ae3e2-6dcc-47e8-888b-cb412adb7939",
   "metadata": {},
   "outputs": [],
   "source": [
    "# The best value of k=4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21282017-17c6-41da-9033-9120c4718ed5",
   "metadata": {},
   "source": [
    "## Building the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f3d2d9d-8e28-4fa1-8f6e-348c9e58b4a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_kmeans=KMeans(n_clusters=4,random_state=10)\n",
    "best_kmeans.fit(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a431388-03bf-44f3-8e6e-1492a4925c22",
   "metadata": {},
   "source": [
    "## Finding Clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6482856b-cd9f-421c-aa55-68d8f4de3575",
   "metadata": {},
   "outputs": [],
   "source": [
    "clusters=best_kmeans.predict(X)\n",
    "clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9269193c-043a-4995-9c4e-f8ff57dae5da",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.DataFrame(clusters).value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65acaa02-8936-4111-971e-b6216f144559",
   "metadata": {},
   "source": [
    "## Cluster centers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e707eca3-366e-4d1b-873a-5247bc2bc82f",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_kmeans.cluster_centers_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bb95ceb9-039c-48ae-a86e-3f15f7ba3b47",
   "metadata": {},
   "source": [
    "## Plotting clusters and centers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "234d9983-e094-4d54-a816-ce3bf53247f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize=(12,9))\n",
    "plt.scatter(X[:,0],X[:,1])\n",
    "plt.scatter(2.57427374,  4.9551547, color='pink')\n",
    "plt.scatter(5.54690135, -9.62123904, color='violet')\n",
    "plt.scatter(-6.10307996,  5.14422118, color='red')\n",
    "plt.scatter(-0.03749354, -5.43011018, color='green');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ff9f695-fae6-46e8-8fd9-f7641f1b92e9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
