{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bd0c55d6-0868-4ada-aa7a-ba2c91da0fc2",
   "metadata": {},
   "source": [
    "# Clustering using Gaussian Mixture Models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53cdb248-d323-4066-b8f8-6b91cc378c2f",
   "metadata": {},
   "source": [
    "## Building GMM for a toy dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b44cc25d-72a1-4240-8a6f-41b30dfb48dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3745c60d-988b-42ff-aeb7-08f8ceb4dce4",
   "metadata": {},
   "source": [
    "## Creating a dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0ab19702-c680-40e9-8be1-e72d2d10a96e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([14.50140716, 27.05608242, 31.91821482, ..., 32.59022643,\n",
       "       36.82912727, 11.83294718])"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.random.seed(100)\n",
    "X1=np.random.normal(loc=25, scale=6,size=2000)\n",
    "X1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f938053f-60b4-4151-9e1e-e5666d435a7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/f2/n_0q5zrx2vs2kbb0hxhcx5br0000gn/T/ipykernel_868/4242627430.py:1: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(X1,color='red',kde=True);\n",
      "/opt/anaconda3/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkAAAAGhCAYAAACJaguMAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAABOp0lEQVR4nO3deVzU1f4/8NewjpmQgrIo6KCZGK6DCxplWRhaqVnRamVmtFwD8vtTtOWmt7AyL3kTyQTNa6XlUnajhFxwo1QEVzIXBFIIcQFX1s/vj9MMjgzKMsyZ5fV8PObx+fCZzwzv+WTw4pzzOUelKIoCIiIiIjviILsAIiIiInNjACIiIiK7wwBEREREdocBiIiIiOwOAxARERHZHQYgIiIisjsMQERERGR3GICIiIjI7jAAERERkd1hACIiIiK7Iz0AJSQkQKPRQK1WQ6vVYsuWLdc9Pz09HVqtFmq1GgEBAUhMTDR4ftiwYVCpVHUeo0aNasmPQURERFZEagBasWIFoqKiMGPGDGRlZSE0NBTh4eHIz883en5ubi5GjhyJ0NBQZGVlYfr06Zg8eTJWrVqlP2f16tUoLCzUP/bv3w9HR0c8+uij5vpYREREZOFUMhdDHTRoEPr3748FCxbojwUGBmLMmDGIi4urc/7UqVOxdu1a5OTk6I9FRkZiz549yMjIMPo94uPj8fbbb6OwsBCtW7duUF01NTU4efIk2rRpA5VK1chPRURERDIoioLz58/D19cXDg7Xb+NxMlNNdVRUVCAzMxPTpk0zOB4WFobt27cbfU1GRgbCwsIMjo0YMQJJSUmorKyEs7NzndckJSXh8ccfv274KS8vR3l5uf7rEydOoGfPno35OERERGQhCgoK0KlTp+ueIy0AlZSUoLq6Gl5eXgbHvby8UFRUZPQ1RUVFRs+vqqpCSUkJfHx8DJ7bsWMH9u/fj6SkpOvWEhcXh3fffbfO8YKCAri5uTXk4xAREZFkZWVl8PPzQ5s2bW54rrQApHNtF5OiKNftdjJ2vrHjgGj9CQoKwsCBA69bQ2xsLGJiYvRf6y6gm5sbAxAREZGVacjwFWkByNPTE46OjnVae4qLi+u08uh4e3sbPd/JyQkeHh4Gxy9duoTly5dj5syZN6zF1dUVrq6ujfwEREREZK2k3QXm4uICrVaLtLQ0g+NpaWkYMmSI0deEhITUOT81NRXBwcF1xv988803KC8vx9NPP23awomIiMjqSb0NPiYmBosWLUJycjJycnIQHR2N/Px8REZGAhBdU+PHj9efHxkZiby8PMTExCAnJwfJyclISkrClClT6rx3UlISxowZU6dliIiIiEjqGKCIiAicPn0aM2fORGFhIYKCgpCSkoLOnTsDAAoLCw3mBNJoNEhJSUF0dDTmz58PX19fzJs3D+PGjTN43z/++ANbt25FamqqWT8PERERWQep8wBZqrKyMri7u6O0tJSDoImIiKxEY35/S18Kg4iIiMjcGICIiIjI7jAAERERkd1hACIiIiK7wwBEREREdocBiIiIiOwOAxARERHZHQYgIiIisjsMQERERGR3pC6FQUQEAFi4sOHnTprUcnUQkd1gCxARERHZHQYgIiIisjsMQERERGR3GICIiIjI7jAAERERkd1hACIiIiK7wwBEREREdofzABGR6TVmXh8iIgnYAkRERER2hwGIiIiI7A4DEBEREdkdjgEiIstQUwPk5QEHDwL5+YCbG+DhAfTqBXTsKLs6IrIxDEBEJF9BAfDFF2J7re++AwYMAEaPBjw9zV4aEdkmBiAikkdRgB9/FI+aGsDVFejZE+jaFbh8WbQE7dsH7NgB7NkDREbKrpiIbAQDEBHJoSjAihXAxo3i6/79gSeeEF1fV8vPF+cdOQJ8+ilw6RIQHNzw7zNpkulqJiKbwUHQRGR+igJ8+21t+HnqKeCll+qGHwDw9weiogCtFqiuBhYtArKzzVktEdkgBiAiMr/168UDAJ55Brjzzuuf7+wMTJwI3HGHCE+LFwNFRS1fJxHZLAYgIjKvY8eAVavE/qOPilDTEA4OwJNPAt27A1euAAkJYpwQEVETMAARkflcuCCWyaipEeN4hg9v3OsdHYEXXwTatgX++gv4+uuWqZOIbB4DEBGZz1dfAWfPAh06AE8/DahUjX8PNzcRglQq4LffgP37TV8nEdk8BiAiMo99+4DMTNGVNXEi0KpV09+ra1fgnnvE/rJlokuMiKgRGICIqOWVl9d2Vw0fDnTu3Pz31E2MePYssGZN89+PiOwKAxARtbz//Q84fRpo1w544AHTvKerq+hGA4D0dODECdO8LxHZBQYgImpZxcXAL7+I/ccfB9Rq0713YKCYQFFRgG++EVsiogZgACKilvXdd+Kur549gT59TP/+48YBTk7A778De/ea/v2JyCYxABFRy8nNFQOfVSoRVFqCp2ft7fQrVwJVVS3zfYjIpjAAEVHLUBQRSAAgJATo1Knlvld4ONCmjehu27q15b4PEdkMBiAiahkHDogFTJ2dgYceatnv1aoVMGqU2P/xR94WT0Q3xABERKanKOLOLwAYNkzM3NzSQkOB9u2BsrLadcaIiOrBAEREpnfggBj/4+wMhIWZ53s6OYm5gQBg3Trg/HnzfF8iskoMQERkWte2/ri5me97a7WAv7+YeDElxXzfl4isDgMQEZlWaqr5W390HByAhx8W++npQEmJeb8/EVkN6QEoISEBGo0GarUaWq0WW7Zsue756enp0Gq1UKvVCAgIQGJiYp1zzp07h1dffRU+Pj5Qq9UIDAxECv8aJDKPuDixvfNO87b+6AQGikd1NbB2rfm/PxFZBakBaMWKFYiKisKMGTOQlZWF0NBQhIeHIz8/3+j5ubm5GDlyJEJDQ5GVlYXp06dj8uTJWLVqlf6ciooK3HfffTh+/DhWrlyJQ4cO4fPPP0fHjh3N9bGI7Ndvv4mWF0dH4L775NUxdqzY7tgBZGfLq4OILJZKUeTNHT9o0CD0798fCxYs0B8LDAzEmDFjEKf7K/IqU6dOxdq1a5GTk6M/FhkZiT179iAjIwMAkJiYiI8++gi///47nJ2dm1RXWVkZ3N3dUVpaCjcZf8ESWauHHxYLkw4ZAjz7rNxaFi0Cdu4E7r8f+OknubUQkVk05ve3tBagiooKZGZmIuyaMQJhYWHYvn270ddkZGTUOX/EiBHYtWsXKisrAQBr165FSEgIXn31VXh5eSEoKAjvv/8+qqur662lvLwcZWVlBg8iaqTffxfLXgDmH/tjzEMPiTFBP/8MbNwouxoisjDSAlBJSQmqq6vh5eVlcNzLywtFRUVGX1NUVGT0/KqqKpT8Pdjx2LFjWLlyJaqrq5GSkoI333wTH3/8Md577716a4mLi4O7u7v+4efn18xPR2SHPv5Y3AE2ejTg4yO7GqBDBzEOCQCmTeNCqURkQPogaJVKZfC1oih1jt3o/KuP19TUoEOHDli4cCG0Wi0ef/xxzJgxw6Cb7VqxsbEoLS3VPwoKCpr6cYjsU0kJsGyZ2P+//5Nby9VGjQJatxZjgVavll0NEVkQaQHI09MTjo6OdVp7iouL67Ty6Hh7exs938nJCR4eHgAAHx8fdO/eHY6OjvpzAgMDUVRUhIqKCqPv6+rqCjc3N4MHETXCwoVi+YngYDH+x1K4uQFvvCH2p08H/u4qJyKSFoBcXFyg1WqRlpZmcDwtLQ1D6vkBGhISUuf81NRUBAcH6wc8Dx06FEeOHEFNTY3+nD/++AM+Pj5wcXEx8acgIlRWAgkJYn/yZLHyuyV54w2xRMYffwDJybKrISILIbULLCYmBosWLUJycjJycnIQHR2N/Px8REZGAhBdU+PHj9efHxkZiby8PMTExCAnJwfJyclISkrClClT9Oe8/PLLOH36NF5//XX88ccf+PHHH/H+++/j1VdfNfvnI7ILq1cDJ04AXl7AY4/JrqYuNzfgzTfF/rvvAhcvyq2HiCyCk8xvHhERgdOnT2PmzJkoLCxEUFAQUlJS0LlzZwBAYWGhwZxAGo0GKSkpiI6Oxvz58+Hr64t58+Zh3Lhx+nP8/PyQmpqK6Oho9O7dGx07dsTrr7+OqVOnmv3zEdmFTz4R28hIwNVVbi31eeklID5ezFD9ySeiO4yI7JrUeYAsFecBImqgnTuBgQPFshf5+YC3tzi+cKHcuq42aZLYfvUV8NRTokXoyBHRLUZENsUq5gEiIhswb57YRkTUhh9L9fjjQP/+QFkZwBZhIrvHAERETVNYCKxYIfYnT5ZbS0M4OACffir2Fy8Gtm2TWw8RScUARERN89ln4g6wkBBgwADZ1TRMSAgwcaLYf/lloKpKbj1EJA0DEBE1Xnk5oJtc9PXX5dbSWLNnAx4ewL59YvZqIrJLDEBE1HirVwPFxYCvr1gA1Zp4eABz5oj9t98GDhyQWw8RScEARESNp7vL68UXxR1g1ubZZ4GRI4GKCrHPGaKJ7A4DEBE1zh9/AJs2iUHFEybIrqZpVCrg88+Btm2BzEzRLUZEdkXqRIhEZIU+/1xsw8MBf3+5tTSHry/wn/8ATz8NzJwJPPigWDS1oXTzCxGRVWILEBE1XHk5sGSJ2LeFAPDkk8DYseJusGef5V1hRHaEAYiIGu7774GSEtF6MnKk7GqaT6UCEhMBT09g717gf/+TXRERmQkDEBE1nG7w8wsvAE420oPeoUPtLf3r1on1wojI5jEAEVHDHDkCrF8vWk1eeEF2Nab1yCPAE08ANTWii6+iQnZFRNTCGICIqGEWLRLbESOAzp3l1tISPv1ULJRaVCS6+ojIpjEAEdGNVVSI9bMA2xj8bEy7dsD48WJ//Xpxuz8R2SwGICK6sbVrxczP3t7AAw/Irqbl9OoFDB0KKArwxRfAlSuyKyKiFsIAREQ3puv+mjDBOmd+boxHHxWtQSUlwKpVsqshohZiI7dxEFGLKSwE0tLE/vPPy62lKXR3rjVUq1bAc88Bc+cCmzcD/foBPXu2SGlEJA9bgIjo+r76StwdFRICdOsmuxrzuO024O67xf7XX3OtMCIbxBYgInvV0JaR+HixfeaZFivFIo0eLdYJKy4GfvlFLP1BRDaDLUBEVL8TJ4A//wQcHYHHHpNdjXm1agWMGyf2U1KAs2fl1kNEJsUARET1+/VXse3VC/DwkFuLDIMGiW6/igoOiCayMQxARGRcTU3t6uiDBsmtRRaVCoiIEPs7d4rWMCKyCQxARGTcoUPAuXPATTeJFiB75e8PaLVi/4cf5NZCRCbDAERExum6v4KDbX/unxt58EHRGpSdDeTlya6GiEyAAYiI6iovB7KyxP7gwXJrsQQ+PrXdgGvXyq2FiEyCAYiI6tqzR4Sg9u2BgADZ1ViGBx4AHByA/fuBggLZ1RBRM3EeICKqS9f9NWiQ6PoBGj+jsq1p316MBdq5UyyWOmuW7IqIqBnYAkREhkpLgYMHxb693v1Vn+HDxXbnTqCoSG4tRNQsDEBEZCgzU6yGrtEAHTrIrsayaDSiS7CqCkhMlF0NETUDAxARGcrMFNvgYLl1WCpdK1BCAnDlitxaiKjJGICIqNbZs8DRo2JfN/cNGerXD2jXDjh1Cli5UnY1RNREDEBEVCsrS3R/de0KtG0ruxrL5OgI3HGH2F+8WG4tRNRkDEBEVEvX/cXWn+sLCRF3x23YAOTmyq6GiJqAAYiIhLNngSNHxH7//nJrsXTt2tWOBfriC7m1EFGTMAARkbB7t9iy+6thnn9ebJcsEQvHEpFVYQAiIiE7W2zZ+tMwY8cC7u5ibbBNm2RXQ0SNxABERMD588Dhw2K/b1+ppViNVq2Axx8X+0uXyq2FiBqNAYiIgL17xd1ffn6Ap6fsaqzHE0+I7fffAxUVcmshokZhACKi2u4vtv40zh13AN7ewLlzwC+/yK6GiBqBAYjI3l25Urv2V79+cmuxNo6OwLhxYv/bb+XWQkSNwgBEZO8OHhRrW3l6Ar6+squxPo8+KrbffcduMCIrIj0AJSQkQKPRQK1WQ6vVYsuWLdc9Pz09HVqtFmq1GgEBAUi8ZkHCJUuWQKVS1Xlc4Zo9RMZlZYltv35icj9qnDvuALy8RDfY+vWyqyGiBnKS+c1XrFiBqKgoJCQkYOjQofjss88QHh6OgwcPwt/fv875ubm5GDlyJF588UUsW7YM27ZtwyuvvIL27dtjnK4ZGoCbmxsOHTpk8Fq1Wt3in4fI6lRXA/v3i/0+feTWYm0WLqzd79ED+OsvYNYsoKDA+PmTJpmnLiJqEKktQHPnzsULL7yAiRMnIjAwEPHx8fDz88OCBQuMnp+YmAh/f3/Ex8cjMDAQEydOxIQJEzBnzhyD81QqFby9vQ0eRGTEsWPApUtA69ZAQIDsaqyXbumQvXtFqCQiiyctAFVUVCAzMxNhYWEGx8PCwrB9+3ajr8nIyKhz/ogRI7Br1y5UVlbqj124cAGdO3dGp06d8MADDyBL18Rfj/LycpSVlRk8iOzCvn1ie/vtYkAvNU23bsBNNwEXL3JtMCIrIS0AlZSUoLq6Gl5eXgbHvby8UFRUZPQ1RUVFRs+vqqpCSUkJAKBHjx5YsmQJ1q5di6+//hpqtRpDhw7FYd0kb0bExcXB3d1d//Dz82vmpyOyEroA1KuX3DqsnaMjEBQk9vfskVsLETWI9EHQqmsGXSqKUufYjc6/+vjgwYPx9NNPo0+fPggNDcU333yD7t274z//+U+97xkbG4vS0lL9o6C+PnwiW1JSApw8KQY+33677GqsX+/eYqsLlURk0aQNgvb09ISjo2Od1p7i4uI6rTw63t7eRs93cnKCh4eH0dc4ODhgwIAB120BcnV1haurayM/AZGV0/2i7tpVjAGi5unZE3BwAAoLgVOngPbtZVdERNchrQXIxcUFWq0WaWlpBsfT0tIwZMgQo68JCQmpc35qaiqCg4Ph7Oxs9DWKoiA7Oxs+Pj6mKZzIVuju/mL3l2m0bi3GAgFsBSKyAlK7wGJiYrBo0SIkJycjJycH0dHRyM/PR2RkJADRNTV+/Hj9+ZGRkcjLy0NMTAxycnKQnJyMpKQkTJkyRX/Ou+++i3Xr1uHYsWPIzs7GCy+8gOzsbP17EhHEnV+//y72dV031Hy6a7l3r9w6iOiGpM4DFBERgdOnT2PmzJkoLCxEUFAQUlJS0LlzZwBAYWEh8vPz9edrNBqkpKQgOjoa8+fPh6+vL+bNm2cwB9C5c+cwadIkFBUVwd3dHf369cPmzZsxcOBAs38+IouVni5mf27XDmDrqOn07g2sXAn88Qdw+bJYMZ6ILJJK0Y0iJr2ysjK4u7ujtLQUbm5ussshMr2oKOCTT8Qsxs88I7sa2/LWW0BxMfDyy4aLy3IiRKIW15jf39LvAiMiCVJTxbZnT7l12KLAQLHVLTBLRBaJAYjI3hQUADk54vb3Hj1kV2N7dFMKMAARWTQGICJ7s26d2Go0vP29JXTvLm6HP3VKPIjIIjEAEdkbdn+1rFatxNxKAFuBiCwYAxCRPamuBn75RewzALUc3bVlACKyWAxARPZk507g7FnglluALl1kV2O7dAHo99+5OjyRhWIAIrInutaf4cO5+ntL8vcX46uuXAGOHZNdDREZwQBEZE82bBDb4cPl1mHrHBxqb4fXzbhNRBaFAYjIXly+DGzfLvbvuUduLfbgttvE9tAhuXUQkVEMQET2Yvt2oLwc6NhR3KpNLUsXgHJzgYoKubUQUR0MQET2Qtf9dc89YhJEalkdOojB5lVVwNGjsqshomswABHZi/XrxZbjf8xDpWI3GJEFYwAisgelpeIWeAC4+265tdgTXQD64w+5dRBRHQxARPZg82agpgbo1k3cok3mcfU4oAsX5NZCRAYYgIjsAW9/l8PTE/DwEOFz61bZ1RDRVZxkF0BEJrRwofHjq1aJbXV1/edQy+jeHcjIADZuBO6/X3Y1RPQ3tgAR2bpLl4A//xT7vP3d/HTdYBs3yq2DiAwwABHZuqNHAUURt2W7u8uuxv7oAlBmphiMTkQWgQGIyNbp7kC69Va5ddirdu2A9u3FOKAtW2RXQ0R/YwAisnW6AMTuL3nYDUZkcRiAiGzZlStAfr7YZwCShwGIyOIwABHZsmPHRNeLh4foiiE5dAEoOxs4c0ZqKUQkMAAR2TKO/7EM7u5Ajx5iMPrmzbKrISIwABHZtsOHxZbdX/LpliDRTUpJRFIxABHZqspK4Phxsd+tm9RSCLUBiOOAiCwCAxCRrSooAKqqgDZtxBxAJNddd4nt/v1ASYncWoiIAYjIZh09KrYBAYBKJbcWEiE0MFDscz4gIukYgIhs1bFjYtu1q9w6qJauFSg9XW4dRMQARGSTFAU4ckTsMwBZDgYgIovBAERki06fBsrKAEdHwN9fdjWkowtAe/YAZ8/KrYXIzjEAEdki3fgff3/AxUVuLVTLx0fMyaQowNatsqshsmsMQES26OoB0GRZdK1AnBCRSCoGICJbxAHQlovjgIgsAgMQka25cgX480+xzwBkeXQBaPdu4Px5ubUQ2TEGICJbk5srxph4eAC33CK7GrqWnx/QpQtQXQ1s2ya7GiK7xQBEZGt03V8c/2O52A1GJB0DEJGt4QBoy8cARCQdAxCRLamp4QBoa6ALQDt3Ahcvyq2FyE4xABHZkqIi4PJlMfdPp06yq6H6aDTiv09VFZCRIbsaIrvkJLsAIjIhXfdXly5iFmiyHAsXGn7t6yvu1vv3v2tb7XQmTTJfXUR2ii1ARLZEF4DY/WX5uncX28OH5dZBZKcYgIhsCcf/WA9dAMrNBSor5dZCZIekB6CEhARoNBqo1WpotVps2bLluuenp6dDq9VCrVYjICAAiYmJ9Z67fPlyqFQqjBkzxsRVE1mgkhLgr7/EvkYjtxa6sQ4dADc3MQ4oN1d2NUR2R2oAWrFiBaKiojBjxgxkZWUhNDQU4eHhyM/PN3p+bm4uRo4cidDQUGRlZWH69OmYPHkyVq1aVefcvLw8TJkyBaGhoS39MYgsg24wrbc3cPPNcmuhG1OpaluB/vhDbi1EdkhqAJo7dy5eeOEFTJw4EYGBgYiPj4efnx8WLFhg9PzExET4+/sjPj4egYGBmDhxIiZMmIA5c+YYnFddXY2nnnoK7777LgI4FwrZi99+E1u2/lgPBiAiaaQFoIqKCmRmZiIsLMzgeFhYGLZv3270NRkZGXXOHzFiBHbt2oXKq/rQZ86cifbt2+OFF15oUC3l5eUoKyszeBBZnZ07xZYByHrceqvYHjsmusKIyGykBaCSkhJUV1fDy8vL4LiXlxeKioqMvqaoqMjo+VVVVSgpKQEAbNu2DUlJSfj8888bXEtcXBzc3d31Dz8/v0Z+GiLJFKU2AHXuLLcWajgfH9FdWVkJHD8uuxoiuyJ9ELRKpTL4WlGUOsdudL7u+Pnz5/H000/j888/h6enZ4NriI2NRWlpqf5RUFDQiE9AZAGOHgXOngWcnDgBojVRqWpbgdgNRmRWTZoIMTc3F5pmNrN7enrC0dGxTmtPcXFxnVYeHW9vb6PnOzk5wcPDAwcOHMDx48fx4IMP6p+vqakBADg5OeHQoUPoauT2YFdXV7i6ujbr8xBJpWv96dRJhCCyHt27A1lZnA+IyMya1ALUrVs33H333Vi2bBmuXLnSpG/s4uICrVaLtLQ0g+NpaWkYMmSI0deEhITUOT81NRXBwcFwdnZGjx49sG/fPmRnZ+sfDz30EO6++25kZ2eza4tsF7u/rJeuBejoUaC6Wm4tRHakSQFoz5496NevH9544w14e3vjpZdewo4dOxr9PjExMVi0aBGSk5ORk5OD6Oho5OfnIzIyEoDomho/frz+/MjISOTl5SEmJgY5OTlITk5GUlISpkyZAgBQq9UICgoyeNxyyy1o06YNgoKC4OLi0pSPS2T5dAGoSxepZVATdOwI3HQTUF4O1DMFCBGZXpMCUFBQEObOnYsTJ05g8eLFKCoqwh133IHbb78dc+fOxalTpxr0PhEREYiPj8fMmTPRt29fbN68GSkpKej891+xhYWFBnMCaTQapKSkYNOmTejbty9mzZqFefPmYdy4cU35GES2oaoK2L1b7DMAWR8HB44DIpJApehGETdDeXk5EhISEBsbi4qKCjg7OyMiIgIffPABfHx8TFGnWZWVlcHd3R2lpaVwc3OTXQ7R9e3bB/TuLe4m+ugj8QuVrEtaGrByJdCrF/Daa1wMlaiJGvP7u1k/KXft2oVXXnkFPj4+mDt3LqZMmYKjR49iw4YNOHHiBEaPHt2ctyeihtB1f2m1DD/W6uqFUf++cYOIWlaTbheZO3cuFi9ejEOHDmHkyJFYunQpRo4cCYe/f/hqNBp89tln6NGjh0mLJSIjdAFowAC5dVDT+fkBajVw5Qrw55+yqyGyC00KQAsWLMCECRPw/PPPw9vb2+g5/v7+SEpKalZxRNQAVwegc+eklkJN5OAAdOsG7N/PcUBEZtKkAJSWlgZ/f399i4+OoigoKCiAv78/XFxc8Oyzz5qkSCKqR3k5sHev2B8wQIwlIevUvTsDEJEZNWnAQNeuXfVLT1ztzJkzzZ4gkYgaYc8esYyChwfvALN2unFAR45wHBCRGTQpANV349iFCxegVqubVRARNcLV3V/XWUKGrIC/P+DqCly8CBw4ILsaIpvXqC6wmJgYAGLdrbfffhs33XST/rnq6mr89ttv6Nu3r0kLJKLr4ABo2+HoCAQEADk5QHq6uCWeiFpMowJQVlYWANECtG/fPoOZlV1cXNCnTx/9rMxEZAYMQLale/faAPTaa7KrIbJpjQpAGzduBAA8//zz+OSTTzhJIJFM58+LX5YAA5Ct0I0DSk8HFIXdmkQtqEljgBYvXszwQyRbZqb4JdmpE1DPdBRkZbp0AVxcgFOnOA6IqIU1uAXo4YcfxpIlS+Dm5oaHH374uueuXr262YUR0Q3our8GDpRbB5mOk5OYD+jgQWDDBiAoSHZFRDarwQHI3d0dqr+bY93d3VusICJqII7/sU233VYbgCZPll0Nkc1qcABavHix0X0ikoQByDbplhDatAmoqhKtQkRkck0aA3T58mVcunRJ/3VeXh7i4+ORmppqssKI6DpOnQKOHxf7Wq3UUsjE/P0Bd3egtBT4+85bIjK9JgWg0aNHY+nSpQCAc+fOYeDAgfj4448xevRoLFiwwKQFEpERu3aJbffuwC23SC2FTMzBARg2TOxv2CC1FCJb1qQAtHv3boSGhgIAVq5cCW9vb+Tl5WHp0qWYN2+eSQskIiPY/WXbhg8X2/Xr5dZBZMOaFIAuXbqENm3aAABSU1Px8MMPw8HBAYMHD0ZeXp5JCyQiIxiAbNs994jt1q1iwVsiMrkmja7r1q0bvvvuO4wdOxbr1q1DdHQ0AKC4uJjzAxGZ0sKFdY8pCrB5s9g/edL4OWTdevYEvLyAv/4CfvsNuPNO2RUR2ZwmtQC9/fbbmDJlCrp06YJBgwYhJCQEgGgN6tevn0kLJKJrnD0LlJWJsSJ+frKroZagUtW2ArEbjKhFNCkAPfLII8jPz8euXbvw888/648PHz4c//73v01WHBEZobv7y9dXzBpMtkkXgDgQmqhFNHmCCW9vb3hfM/3+QM5IS9TydOPsunSRWga1MF0A+vVX4OJFoHVrufUQ2ZgmBaCLFy9i9uzZWL9+PYqLi1FTU2Pw/LFjx0xSHBEZoWsB6txZahnUwgICRMg9fhzYsgW4/37ZFRHZlCYFoIkTJyI9PR3PPPMMfHx89EtkEFELq6mpDUAajdRSyAzuuQdIThbdYAxARCbVpAD0008/4ccff8TQoUNNXQ8RXU9xMXDlCuDsLMYAkW27OgARkUk1aRB027Zt0a5dO1PXQkQ3omv98fMDHB2llkJmoBsHtHu3uPuPiEymSQFo1qxZePvttw3WAyMiM+AAaPvi4wMEBoq5nzZtkl0NkU1pUhfYxx9/jKNHj8LLywtdunSBs7OzwfO7d+82SXFEdA0OgLY/99wD5OQAv/wCjB0ruxoim9GkADRmzBgTl0FEN1RdDRQUiH22ANmPsDBg/nwgNVV2JUQ2pUkB6J133jF1HUR0IydPApWVgFoNdOgguxoyl2HDACcn4MgR4NgxcXs8ETVbk8YAAcC5c+ewaNEixMbG4syZMwBE19eJEydMVhwRXeXq7i+HJv+vS9bGzQ0YMkTssxWIyGSa9FN079696N69Oz744APMmTMH586dAwCsWbMGsbGxpqyPiHR0AYjdX/YnLExsGYCITKZJXWAxMTF47rnn8OGHH6JNmzb64+Hh4XjyySdNVhwRXYV3gNmPhQsNv754UWx/+glYsKDuFAiTJpmnLiIb0qQWoJ07d+Kll16qc7xjx44oKipqdlFEdI2KCkDXvcwAZH/8/cVaYFeuALm5sqshsglNCkBqtRplZWV1jh86dAjt27dvdlFEdI2CArEMRps2QNu2sqshc3NwEPMBAcDBg3JrIbIRTQpAo0ePxsyZM1FZWQkAUKlUyM/Px7Rp0zBu3DiTFkhEMOz+4tp79qlnT7FlACIyiSYFoDlz5uDUqVPo0KEDLl++jLvuugvdunVDmzZt8N5775m6RiLiAGjSBaDjx2vHBBFRkzVpELSbmxu2bt2KjRs3IjMzEzU1Nejfvz/uvfdeU9dHRAADEImuTx8foLAQ+P13QKuVXRGRVWt0AKqpqcGSJUuwevVqHD9+HCqVChqNBt7e3lAUBSo2zxOZ1qVLwF9/iX0GIPvWs6cIQAcPMgARNVOjusAURcFDDz2EiRMn4sSJE+jVqxduv/125OXl4bnnnsNYrlNDZHq68T8eHsDNN8utheS6ehyQosithcjKNaoFaMmSJdi8eTPWr1+Pu+++2+C5DRs2YMyYMVi6dCnGjx9v0iKJ7Brn/yGd7t3FshhnzohWQW9v2RURWa1GtQB9/fXXmD59ep3wAwD33HMPpk2bhi+//NJkxRERuAI81XJxAbp1E/u8G4yoWRoVgPbu3Yv777+/3ufDw8OxZ8+eRhWQkJAAjUYDtVoNrVaLLVu2XPf89PR0aLVaqNVqBAQEIDEx0eD51atXIzg4GLfccgtat26Nvn374r///W+jaiKyKBwATVfj7fBEJtGoAHTmzBl4eXnV+7yXlxfOnj3b4PdbsWIFoqKiMGPGDGRlZSE0NBTh4eHIz883en5ubi5GjhyJ0NBQZGVlYfr06Zg8eTJWrVqlP6ddu3aYMWMGMjIysHfvXjz//PN4/vnnsW7duoZ/UCJLUVYGnD0r5v5hCxABtQHo0CHg77nYiKjxGhWAqqur4eRU/7AhR0dHVFVVNfj95s6dixdeeAETJ05EYGAg4uPj4efnhwULFhg9PzExEf7+/oiPj0dgYCAmTpyICRMmYM6cOfpzhg0bhrFjxyIwMBBdu3bF66+/jt69e2Pr1q0N/6BElkLX+uPtDajVUkshC9GpE+DuLpZHOXxYdjVEVqtRg6AVRcFzzz0HV1dXo8+Xl5c3+L0qKiqQmZmJadOmGRwPCwvD9u3bjb4mIyMDYbpVkf82YsQIJCUlobKyEs7OznXq3bBhAw4dOoQPPvig3lrKy8sNaje2zAeRFBz/Q9dSqYCgIGDbNmD//toWISJqlEYFoGefffaG5zT0DrCSkhJUV1fX6VLz8vKqd0HVoqIio+dXVVWhpKQEPj4+AIDS0lJ07NgR5eXlcHR0REJCAu677756a4mLi8O7777boLqJzIp3gJExugC0bx/w2GOyqyGySo0KQIsXLzZ5AddOnHijyRSNnX/t8TZt2iA7OxsXLlzA+vXrERMTg4CAAAwbNszoe8bGxiImJkb/dVlZGfz8/Br7UYhMS1FqV/7WaOTWQpYlMBBwdASKi2snySSiRmnSUhim4OnpCUdHxzqtPcXFxfUOtPb29jZ6vpOTEzw8PPTHHBwc0O3vW0X79u2LnJwcxMXF1RuAXF1d6+3WI5LmyBGx5pOTkxj3QaTTqpW4Hf7QIdENRkSN1qTFUE3BxcUFWq0WaWlpBsfT0tIwZMgQo68JCQmpc35qaiqCg4PrjP+5mqIojRqfRGQRfv1VbP39RQgiulqvXmK7b5/cOoislLQABAAxMTFYtGgRkpOTkZOTg+joaOTn5yMyMhKA6Jq6ekxRZGQk8vLyEBMTg5ycHCQnJyMpKQlTpkzRnxMXF4e0tDQcO3YMv//+O+bOnYulS5fi6aefNvvnI2qW334TW3Z/kTG6AHT4MHDhgtxaiKyQ1D8rIyIicPr0acycOROFhYUICgpCSkoKOv99x0thYaHBnEAajQYpKSmIjo7G/Pnz4evri3nz5mHcuHH6cy5evIhXXnkFf/75J1q1aoUePXpg2bJliIiIMPvnI2oWXQsQAxAZ4+UFeHoCJSXA+vXA6NGyKyKyKipF4Yp61yorK4O7uztKS0vh5uYmuxyyR5cvA25uQFUV8P77YiFUomt9/TWwaRMwaRLw2WeyqyGSrjG/v6V2gRFRPXbvFuHHzQ1o1052NWSpdN1gKSlcHZ6okRiAiCzR1eN/rjMtBNm57t0BZ2fgzz85GJqokRiAiCyRbvxPQIDcOsiyubgAPXqI/R9/lFsLkZVhACKyRBwATQ2l6wZjACJqFAYgIktz8iRQUAA4OHANMLoxXQDKyADOnJFbC5EVYQAisjS68T+3384V4OnG2rUTa4PV1ADr1smuhshqMAARWRpdABo8WG4dZD1GjhTb//1Pbh1EVoQBiMjS6Mb/DBoktw6yHg89JLYpKUBlpdxaiKwEAxCRJamqAnbuFPtsAaKGGjwYaN8eOHcO2LJFdjVEVoEBiMiSHDgAXLoEtGlTe3sz0Y04OgIPPCD2166VWwuRlWAAIrIkuu6vgQPFLzWihtJ1g33/PWeFJmoABiAiS8IB0NRU990n7ho8fhzYv192NUQWjwGIyJJwADQ1VevWwL33iv3vv5dbC5EVYAAishTnzgE5OWKfAYiaYvRoseU4IKIbYgAishQ7doitRgN06CC3FrJODzwgFs/duVPMKE5E9WIAIrIU27aJ7dChcusg6+XtXdt6+MMPcmshsnAMQESWYutWsb3jDrl1kHW7+m4wIqoXAxCRJaisrB0AzQBEzaEbB7R+PXDhgtxaiCwYAxCRJcjOFhMgtm0LBAbKroasWWAg0LUrUFHBxVGJroMBiMgS6Lq/hg4FHPi/JTWDSsW7wYgagD9piSwBx/+QKenGAf3vf2J9OSKqgwGISDZFYQAi0xo6FPDwAM6cqf23RUQGGICIZDtyBCguBlxcAK1WdjVkC5ycaluBVq+WWwuRhWIAIpJN9xf6gAFiLSciU3j4YbFdvRqoqZFbC5EFYgAikm3zZrFl9xeZ0r33AjffDJw4AezaJbsaIovDAEQk26ZNYjtsmMwqyNao1cCoUWKf3WBEdTAAEcl0/Lh4ODqyBYhMT9cNtmqVGGxPRHoMQEQy6Vp/BgwQ3RVEphQeDri6ioH2Bw7IrobIojAAEcnE7i9qSW3aAGFhYp/dYEQGGICIZNIFoLvvlloG2bCr7wYjIj0GICJZjh8H8vLEnC1DhsiuhmzVgw+KMWZ79gBHj8quhshiMAARybJxo9hy/A+1JA+P2i7WNWuklkJkSRiAiGRh9xeZC7vBiOpwkl0Akd1ZuFDckvzDD+LrixfFMaKWMmYM8OqrQEYGcPIk4OsruyIi6dgCRCRDURFw9qwY/9Otm+xqyNb5+gIhIWKf3WBEABiAiOQ4eFBsb71VLIJK1NJ03WArV8qtg8hCMAARyaALQIGBcusg+/HII2K7eTPw119yayGyABwDRGRulZXAH3+I/Z495dZCtqGhY8i6dBHTL6xeDbz8cktWRGTx2AJEZG7HjgEVFYCbG9Cxo+xqyJ5otWL7zTdy6yCyAAxAROaWkyO2PXoADvxfkMyof3+xZTcYEQMQkdnpxv+w+4vMzdMTGDgQqKnhnEBk9xiAiMzp1CkgP1/scwA0yfDoo2LLbjCyc9IDUEJCAjQaDdRqNbRaLbZs2XLd89PT06HVaqFWqxEQEIDExESD5z///HOEhoaibdu2aNu2Le69917s2LGjJT8CUcP99JOYBNHPD7jlFtnVkD3SBaDNm8V8VER2SupdYCtWrEBUVBQSEhIwdOhQfPbZZwgPD8fBgwfh7+9f5/zc3FyMHDkSL774IpYtW4Zt27bhlVdeQfv27TFu3DgAwKZNm/DEE09gyJAhUKvV+PDDDxEWFoYDBw6gIweckmy62Z979ZJbB9mvdetq7waLialdJ6w+kyaZoSgi81MpiqLI+uaDBg1C//79sWDBAv2xwMBAjBkzBnFxcXXOnzp1KtauXYsc3SBSAJGRkdizZw8yMjKMfo/q6mq0bdsWn376KcaPH9+gusrKyuDu7o7S0lK4ubk18lMR1aOiQozBOH8emDYN0GhkV0T2KjUVWLUK6N4deOON65/LAERWpDG/v6V1gVVUVCAzMxNhYWEGx8PCwrB9+3ajr8nIyKhz/ogRI7Br1y5UVlYafc2lS5dQWVmJdu3a1VtLeXk5ysrKDB5EJrdliwg/bm5A586yqyF7prsd/vBhoLRUbi1EkkgLQCUlJaiuroaXl5fBcS8vLxTV0y9dVFRk9PyqqiqUlJQYfc20adPQsWNH3HvvvfXWEhcXB3d3d/3Dz8+vkZ+GqAGu7v7i7e8kk4eH6AZTFCArS3Y1RFJI/ymsUqkMvlYUpc6xG51v7DgAfPjhh/j666+xevVqqNXqet8zNjYWpaWl+kdBQUFjPgLRjV29+jvH/5AlCA4W28xMuXUQSSItAHl6esLR0bFOa09xcXGdVh4db29vo+c7OTnBw8PD4PicOXPw/vvvIzU1Fb17975uLa6urnBzczN4EJnU77+LGaBdXHj7O1kG3aSI7AYjOyUtALm4uECr1SItLc3geFpaGoYMGWL0NSEhIXXOT01NRXBwMJydnfXHPvroI8yaNQs///wzgnV/5RDJtGaN2N59N3Cd1kgis/HwEAPxFYWtQGSXpHaBxcTEYNGiRUhOTkZOTg6io6ORn5+PyMhIAKJr6uo7tyIjI5GXl4eYmBjk5OQgOTkZSUlJmDJliv6cDz/8EG+++SaSk5PRpUsXFBUVoaioCBcuXDD75yPS+/ZbsdWtyE1kCQYOFFvOlUZ2SGoAioiIQHx8PGbOnIm+ffti8+bNSElJQee/75ApLCxEvm7WXAAajQYpKSnYtGkT+vbti1mzZmHevHn6OYAAMbFiRUUFHnnkEfj4+Ogfc+bMMfvnIwIAHDkCZGcDjo7AmDGyqyGqpdUCKhWQmytmKSeyI1LnAbJUnAeITGr2bCA2Frj3XiAtDVi4UHZFRLXi48UCvaNHAyNH1n2e8wCRFbGKeYCI7Iau+0u3BAGRJRkwQGx37BDjgYjsBAMQUUs6dgzYvVvM+zN2rOxqiOrq1w9wcgIKC4ETJ2RXQ2Q2DEBELWnlSrEdNgxo315qKURG3XQTEBQk9nfulFsLkRkxABG1FEUBli0T+489JrcWouvR3Q22cydQUyO3FiIzYQAiail79gD79onJDxmAyJL16gW4ugKnT4tuWyI7wABE1FKWLhXbhx4C2raVWwvR9bi4iLFAALvByG4wABG1hKoq4Msvxf5Vk3kSWSzd3WCZmUB1tdxaiMyAAYioJaSmAsXFYuDz/ffLroboxgIDgZtvBs6fF2vXEdk4BiCilvDFF2L75JPAVevUEVksR0cxMzTApTHILjAAEZlacTHw3Xdin91fZE0GDRLb3buBK1fk1kLUwhiAiEwtORmoqBC3FvfvL7saooYLCAC8vMS/X64QTzaOAYjIlKqrgcREsf/yy3JrIWoslQoICRH727fLrYWohTEAEZnSzz8DeXnitveICNnVEDXe4MEiCB05IrpziWwUAxCRKSUkiO2ECUCrVnJrIWqKtm3FHWEAkJEhtxaiFsQARGQqhw8DP/0k9iMj5dZC1BxDhohtRgaXxiCbxQBEZCpz5oj1v0aNArp1k10NUdP17StaMM+eBTZulF0NUYtwkl0AkdVbuBAoLRV3fwGi+2DhQrk1ETWHs7OYGXrzZmDxYmD4cNkVEZkcW4CITGHDBrH8RUAAW3/INui6wVavFgGfyMYwABE11+XLQHq62B8xQtxBQ2TtunQBfHzEv+9vv5VdDZHJMQARNdfGjeKXhI8P0Lu37GqITOPqOYEWL5ZbC1ELYAAiao6zZ8XCpwAQHg448H8psiGDB4t/09u3A4cOya6GyKT405qoOT76SLT+dOwoBo0S2RJ3d2DkSLHPgf1kYxiAiJqqqAj45BOxP3o0W3/INunmtFqyRIR9IhvBn9hETTVrFnDpEqDRcOwP2a777wf8/YEzZ4CVK2VXQ2QyDEBETbFnT+2ip2PH8s4vsl2OjsCkSWJf92+eyAYwABE1lqIA//iHWCLg0UeB226TXRFRy5owAXByEoOh9+6VXQ2RSTAAETXWihXAli1iqYA5c2RXQ9TyfHyAMWPE/vz5UkshMhUGIKLGOHcOeOMNsT99uhgbQWQPXntNbP/7XzEeiMjKMQARNUZMDHDyJHDrrcCUKbKrITKfO+8E+vQRd4J9/rnsaoiajQGIqKF++knMiKtSia1aLbsiIvNRqYCoKLH/6adAZaXUcoiaiwGIqCHOnau9E2byZGDoUKnlEEnx+ONA+/bAn38Ca9bIroaoWRiAiG5EUYCJE8UP/a5dgffek10RkRxqde3EiHPniv83iKwUAxDRjSQmAqtWiduAv/4aaN1adkVE8rzyCuDqCvz2m7gbkshKMQARXU92NhAdLfZnz+Z6X0Te3sBzz4n92bOllkLUHAxARPUpKRFzn5SXiwUhdUGIyN5NmSLWvvvpJ06MSFaLAYjImMpKMctzXp4Y9/Pf/3KxUyKdbt3E/x8A8MEHcmshaiL+RCe6lqKIO702bQJuvhlYuxZo1052VUSWZepUsV2+HDh8WG4tRE3AAER0rQ8+EAOfVSrgyy+Bnj1lV0Rkefr1A0aNEmvizZoluxqiRmMAIrral18CsbFiPz4eeOghqeUQWbR33xXbL78EDh2SWwtRIzEAEemsXVt7d8uUKaIbjIjqp9WKPxLYCkRWiAGICADWrRODOquqgKef5sBOoob65z/F9quvgIMHpZZC1BhOsgsgkm7TJnG7e0UF8MgjYp2vRYtkV0VkHfr1A8aNE5OFTpsmWlKJrID0FqCEhARoNBqo1WpotVpsucHMounp6dBqtVCr1QgICEBiYqLB8wcOHMC4cePQpUsXqFQqxMfHt2D1ZPUyMoAHHgCuXBHbL78UMz4TUcO9/z7g6Aj88AOQni67GqIGkRqAVqxYgaioKMyYMQNZWVkIDQ1FeHg48vPzjZ6fm5uLkSNHIjQ0FFlZWZg+fTomT56MVatW6c+5dOkSAgICMHv2bHh7e5vro5A1yswE7r8fuHgRuO8+4NtvARcX2VURWZ/u3YGXXhL7U6aIMUFEFk6lKPJWsxs0aBD69++PBQsW6I8FBgZizJgxiIuLq3P+1KlTsXbtWuTk5OiPRUZGYs+ePcjIyKhzfpcuXRAVFYWoqKhG1VVWVgZ3d3eUlpbCzc2tUa8lK7FvHzBsGHDmDHDnnWJG25tuqn1+4UJppRFZlEmTGnbeX3+JCRIvXBDjgZ54omXrIjKiMb+/pbX1V1RUIDMzE9OmTTM4HhYWhu3btxt9TUZGBsLCwgyOjRgxAklJSaisrISzs3OTaikvL0d5ebn+67Kysia9D5lZU0NKUREwZw5w/jyg0YjxC8uWmbY2IlvRmP/Ppk4F3noL+L//Ax58UEwkSmShpHWBlZSUoLq6Gl5eXgbHvby8UFRUZPQ1RUVFRs+vqqpCSUlJk2uJi4uDu7u7/uHn59fk9yILd+oU8O9/i/Dj5ydudVerZVdFZBveeEP8UXHiBPDee7KrIbou6YOgVSqVwdeKotQ5dqPzjR1vjNjYWJSWluofBQUFTX4vsmBnzojwc+4c4OsLREUZdnsRUfO0agV88onY//hjTo5IFk1aAPL09ISjo2Od1p7i4uI6rTw63t7eRs93cnKCh4dHk2txdXWFm5ubwYNsTFmZCD+nTwMdOojww+Z5ItN74AFg5EixoPBrr4m19YgskLQxQC4uLtBqtUhLS8PYsWP1x9PS0jB69GijrwkJCcEPP/xgcCw1NRXBwcFNHv9DdqC8HJg/HyguBjw8gOhowN1ddlVEtkc3XigkBEhNBX75BZgwQXxtTEMHWBO1AKldYDExMVi0aBGSk5ORk5OD6Oho5OfnIzIyEoDomho/frz+/MjISOTl5SEmJgY5OTlITk5GUlISpkyZoj+noqIC2dnZyM7ORkVFBU6cOIHs7GwcOXLE7J+PLEB1tfihfPw40Lq1GPPDld2JWlaHDmIQNAB8841ogSWyMFJnfIuIiMDp06cxc+ZMFBYWIigoCCkpKejcuTMAoLCw0GBOII1Gg5SUFERHR2P+/Pnw9fXFvHnzMG7cOP05J0+eRL9+/fRfz5kzB3PmzMFdd92FTZs2me2zkQVQFDGx4f79gLOzaI7n3FBE5nHffcCuXUBBAbB8OVt7yOJInQfIUnEeICtxo9tz164FfvwRUKmAl18G+vQxT11EJOTnA3FxYmLEiROBAQMMn2coIhNrzO9v6XeBEbWIrVtF+AGAJ59k+CGSwd8fCA8X+199BZw9K7ceoqswAJHtyc0Fvv5a7I8aJWZ6JiI5Ro0SQejSJeCLL7hMBlkMBiCyLWVlQGIiUFUF9O1bOxCTiORwdAReeEGMw8vJAdavl10REQAGILIluju+zp0Tg52fe06M/yEiuby9gUcfFfurV4tWWiLJGIDIdqxcCRw+LJa2ePllMSstEVmGO+8E+vcXXWCffw5cvCi7IrJzDEBkG379FdiwQew//zxvdyeyNCoVMH484OkpZmRfvJjjgUgqBiCyfidP1q7mPnKkGPtDRJanVSvgpZfEeKB9+4B33pFdEdkxBiCybhUVojm9shLo2ZODnoksnb8/8PTTYv9f/wJWrZJbD9ktBiCybt9+K1qA3NxE15cD/0kTWbzBg4Hhw8X++PFAZqbcesgu8bcFWa/du4HNm8X+88+LEERE1mHcOCAsTMwP9MADQF6e7IrIzjAAkXXKywP++1+xP2KE6P4iIuvh6ChacHv1AoqKxISJZ87IrorsCAMQWZ+qKuCpp8RfjhoNMHq07IqIqCnc3ICUFMDXFzhwQISgCxdkV0V2ggGIrM+77wLbton5fiZOFH9JEpF16tQJWLcOaNtWTGcxdixQXi67KrIDDEBkXTZuBN57T+w//bSYU4SIrFtQEPDTT0Dr1sAvv4gQdOWK7KrIxjEAkfU4dUqEHkURawsNGCC7IiIylUGDgB9+EHMF/fQT8NBDwOXLsqsiG8YARNahpkbc6XXyJNCjB/DJJ7IrIiJTu/vu2pagtDRxg8O5c7KrIhvFAETW4cMPgR9/BFxdgeXLxQ9IIrI9d90F/PyzGCC9ZQsQGgr8+afsqsgGOckugOiGNm0CZswQ+59+CvTpI7UcIjKRhQvrf27yZOA//wH27xe3yqelAcHB5quNbB5bgMiyFRYCjz8uusCefVaM/SEi2+fnB0ydCvj4iG6w0NDaNf+ITIABiCxXVRUQEQH89Zf4CzAhQawoTUT2wcNDhKBevcRdYc88IxZT5eBoMgEGILJcM2aIMQBt2gArVwI33SS7IiIyt1atgFdeAd58U/wBtHAhMHAgkJ0tuzKycgxAZJlWrxYDnwEgORno3l1uPUQkj4MDMGuWmDDRy0uMCwoOBmJj2RpETcYARJZn1y4x3w8AREcDjzwitx4isgz33Qfs2SN+JlRXA7Nni5si0tNlV0ZWiAGILEtBAfDgg+KvuvDw2lYgIiJAtAB9+y2wZo1YQ+zwYWDYMHGDRFGR7OrIijAAkeU4fRq4/37xQywoSMz348SZGojIiDFjgIMHxaBoQHSVd+sG/OtfYqFkohtgACLLUFYmws/Bg0DHjsD//icmQiMiqo+7O5CYCGzdKgZGX7wIvPWWGDP4xRdi+gyiejAAkXznz4tur127xOKmaWlA586yqyIiazF0KJCRAXz1lfjZceIE8NxzYnzQd9+J9QOJrqFSFP7LuFZZWRnc3d1RWloKN7ZCtKwzZ8RYnx07RIvPxo1A//4Ne+31ZpElIvtUWQls2ACsXw+UlopjAwaIrrH77uNcYjauMb+/2QJE8vz5p1j8cMcOoF078QOroeGHiMgYZ2exiGpuLjB9ulg3cOdOcWzYMNFdRgS2ABnFFiAz2LFDDGIsLAS8vUW3V1BQ496DLUBEdCNlZWJx1fR0Mbs8APTsCYweDXTpIr6eNElaeWRajfn9zVtsyLwUBViyRMzseuWKCD1r1wIajezKiMgWubkBjz0mur9+/BHYtk3cbHHwINC3rxh/SHaJXWBkPqWlwJNPAhMmiPAzapT4YcTwQ0QtrW1bMcHqzJnA4MFiLFB2tphheuxYYPdu2RWSmTEAkXmsXQvcfruY28fREYiLA77/nre6E5F5tW8PPP888PbbgFYrgtB334n9UaPE3WRkFzgGyAiOATKh994T63rp/rry9BQztgYEyK2LiAgQ4xCPHBG30OvmDRo4EHj9dbHkhouL3PqoUXgXGMlXXAxMmQL8858i/Dg4iLsw3nmH4YeILIePD/Df/wKHDok/zlxcxE0aTz0lBknPmiXmFSKbwxYgI9gC1AzHjwNz5gBJSWKcDwAEBoq/pDp1kloaEZFRV98FVlwMfPYZkJBQu7aYSgXceSfwxBPiZ5mHh5w66YYa8/ubAcgIBqAm2LMH+Phj0YxcXS2ODRwoHkFBnHyMiCyXsdvgKyqAlSuBBQsM5w5ycgKGDwfCwoB77xU/3xzYmWIpGICaiQHoOq6ee+fyZdFUvHUrkJ9fezwwUKzrddttDD5EZP3OnBGTKe7cCRQUGD7Xvj1wzz1iOY7gYHFrfatWUsokBqBmYwC6jvnzgZwcIDNTPCorxXFHR/E/flhY7eRiRES2prAQuPlm4JdfgM2b66487+goWoX69wd69xaPXr1EUKIWxwDUTAxA17hwAVi3Dli1ClizpnZsDwD4+oq/fAYNAtq0kVcjEZG5VVWJJTd+/x3IyxNjIM+fN36ut7cIQrpA1KuXmJFarTZrybaOAaiZ7D4AVVaKpt7168VfORkZtS09AHDLLUC/fmJ8j0bDbi4iIkDMdH/unAhD+fni7rHz54GjR42f7+gI3HprbSjSbTt35riiJrKqAJSQkICPPvoIhYWFuP322xEfH4/Q0NB6z09PT0dMTAwOHDgAX19f/L//9/8QGRlpcM6qVavw1ltv4ejRo+jatSvee+89jB07tsE12VUAUhSxKOmOHSL06LYXLhieFxAAPPyw+B+2Sxf+z0lE1FBXroiusxMnxM/bEyfE4+JF4+fffHNtK1FQENC9O9CtmwhGTlzB6nqsZi2wFStWICoqCgkJCRg6dCg+++wzhIeH4+DBg/D3969zfm5uLkaOHIkXX3wRy5Ytw7Zt2/DKK6+gffv2GDduHAAgIyMDERERmDVrFsaOHYs1a9bgsccew9atWzFo0CBzf0TLcfmy+ItE11ybkyPWwsnJAU6frnt+u3biTod77xUP3dw9XICUiKhx1GrRWn71sj+KIpYH0oWikyfFtrhY/AGakVF3VmonJ/EHaOfOYviB7uHtLZb6uOUWwN29duvqasYPaX2ktgANGjQI/fv3x4IFC/THAgMDMWbMGMTFxdU5f+rUqVi7di1ycnL0xyIjI7Fnzx5k/P0PJSIiAmVlZfjpp5/059x///1o27Ytvv766wbVZdEtQNXVIsxcuiT+erh0Sax2fPo0UFJS93HihGiOPXWq/vd0cAA6dhT/Y+kevr5s5SEiMrfqauCvv2qDUWGh+Pl96pThUISGcHYW4cvVVUzw6OcHtG5d+7jpJsOvr3f82mPOzi3z+ZvJKlqAKioqkJmZiWnTphkcDwsLw/bt242+JiMjA2FhYQbHRowYgaSkJFRWVsLZ2RkZGRmIjo6uc058fHy9tZSXl6O8vFz/dWlpKQBxIU3qwAExvXpNjXhUV9c+dF9f77lLl4Cr6my0m24S/wN07y5uUe/eHejRA/j117rTvTfn+xARUdO1bSseQUG1x2pqxB+7p06JcUalpeJr3ePy5dqH7ud3ZaV46AZmnzxpuhqdnESwcnQUDyen2oexYw4OYryobsyoSiXWh5w3z3Q1ofb3dkPadqQFoJKSElRXV8PLy8vguJeXF4p0s29eo6ioyOj5VVVVKCkpgY+PT73n1PeeABAXF4d33323znE/P7+GfhzrcOmSmO790CHghx9kV0NERNaqqko8mmPXLuCLL0xTzzXOnz8Pd3f3654jfTSV6po7iBRFqXPsRudfe7yx7xkbG4uYmBj91zU1NThz5gw8PDyMvq6srAx+fn4oKCiwvC4yG8Fr3PJ4jc2D17nl8Rq3PGu5xoqi4Pz58/D19b3hudICkKenJxwdHeu0zBQXF9dpwdHx9vY2er6TkxM8/l6bpb5z6ntPAHB1dYXrNYPFbrnllht+Bjc3N4v+h2ALeI1bHq+xefA6tzxe45ZnDdf4Ri0/OtJGubq4uECr1SItLc3geFpaGoYMGWL0NSEhIXXOT01NRXBwMJz/HpBV3zn1vScRERHZH6ldYDExMXjmmWcQHByMkJAQLFy4EPn5+fp5fWJjY3HixAksXboUgLjj69NPP0VMTAxefPFFZGRkICkpyeDurtdffx133nknPvjgA4wePRrff/89fvnlF2y9ejE7IiIismtSA1BERAROnz6NmTNnorCwEEFBQUhJSUHnzp0BAIWFhci/apFNjUaDlJQUREdHY/78+fD19cW8efP0cwABwJAhQ7B8+XK8+eabeOutt9C1a1esWLHCpHMAubq64p133qnTbUamw2vc8niNzYPXueXxGrc8W7zG0meCJiIiIjI3znRHREREdocBiIiIiOwOAxARERHZHQYgIiIisjsMQI2UkJAAjUYDtVoNrVaLLVu2yC7Jqm3evBkPPvggfH19oVKp8N133xk8rygK/vnPf8LX1xetWrXCsGHDcODAATnFWqG4uDgMGDAAbdq0QYcOHTBmzBgcOnTI4Bxe4+ZbsGABevfurZ8kLiQkxGBBZl5j04uLi4NKpUJUVJT+GK9z8/zzn/+ESqUyeHh7e+uft7XrywDUCCtWrEBUVBRmzJiBrKwshIaGIjw83OBWfWqcixcvok+fPvj000+NPv/hhx9i7ty5+PTTT7Fz5054e3vjvvvuw3nd4n50Xenp6Xj11Vfx66+/Ii0tDVVVVQgLC8PFixf15/AaN1+nTp0we/Zs7Nq1C7t27cI999yD0aNH63858Bqb1s6dO7Fw4UL07t3b4Divc/PdfvvtKCws1D/27dunf87mrq9CDTZw4EAlMjLS4FiPHj2UadOmSarItgBQ1qxZo/+6pqZG8fb2VmbPnq0/duXKFcXd3V1JTEyUUKH1Ky4uVgAo6enpiqLwGrektm3bKosWLeI1NrHz588rt956q5KWlqbcddddyuuvv64oCv8tm8I777yj9OnTx+hztnh92QLUQBUVFcjMzERYWJjB8bCwMGzfvl1SVbYtNzcXRUVFBtfc1dUVd911F695E5WWlgIA2rVrB4DXuCVUV1dj+fLluHjxIkJCQniNTezVV1/FqFGjcO+99xoc53U2jcOHD8PX1xcajQaPP/44jh07BsA2r6/01eCtRUlJCaqrq+ssqurl5VVn8VUyDd11NXbN8/LyZJRk1RRFQUxMDO644w4EBQUB4DU2pX379iEkJARXrlzBzTffjDVr1qBnz576Xw68xs23fPly7N69Gzt37qzzHP8tN9+gQYOwdOlSdO/eHX/99Rf+9a9/YciQIThw4IBNXl8GoEZSqVQGXyuKUucYmRavuWm89tpr2Lt3r9F18XiNm++2225DdnY2zp07h1WrVuHZZ59Fenq6/nle4+YpKCjA66+/jtTUVKjV6nrP43VuuvDwcP1+r169EBISgq5du+KLL77A4MGDAdjW9WUXWAN5enrC0dGxTmtPcXFxnURMpqG7+4DXvPn+8Y9/YO3atdi4cSM6deqkP85rbDouLi7o1q0bgoODERcXhz59+uCTTz7hNTaRzMxMFBcXQ6vVwsnJCU5OTkhPT8e8efPg5OSkv5a8zqbTunVr9OrVC4cPH7bJf8cMQA3k4uICrVaLtLQ0g+NpaWkYMmSIpKpsm0ajgbe3t8E1r6ioQHp6Oq95AymKgtdeew2rV6/Ghg0boNFoDJ7nNW45iqKgvLyc19hEhg8fjn379iE7O1v/CA4OxlNPPYXs7GwEBATwOptYeXk5cnJy4OPjY5v/jqUNv7ZCy5cvV5ydnZWkpCTl4MGDSlRUlNK6dWvl+PHjskuzWufPn1eysrKUrKwsBYAyd+5cJSsrS8nLy1MURVFmz56tuLu7K6tXr1b27dunPPHEE4qPj49SVlYmuXLr8PLLLyvu7u7Kpk2blMLCQv3j0qVL+nN4jZsvNjZW2bx5s5Kbm6vs3btXmT59uuLg4KCkpqYqisJr3FKuvgtMUXidm+uNN95QNm3apBw7dkz59ddflQceeEBp06aN/necrV1fBqBGmj9/vtK5c2fFxcVF6d+/v/52YmqajRs3KgDqPJ599llFUcStl++8847i7e2tuLq6Knfeeaeyb98+uUVbEWPXFoCyePFi/Tm8xs03YcIE/c+F9u3bK8OHD9eHH0XhNW4p1wYgXufmiYiIUHx8fBRnZ2fF19dXefjhh5UDBw7on7e166tSFEWR0/ZEREREJAfHABEREZHdYQAiIiIiu8MARERERHaHAYiIiIjsDgMQERER2R0GICIiIrI7DEBERERkdxiAiIiIyO4wABEREZHdYQAiIiIiu8MARERERHaHAYiIiIjszv8HKkNXLB51eC0AAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(X1,color='red',kde=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7dc4bfd5-15cc-469a-86dd-dc68815e5766",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/f2/n_0q5zrx2vs2kbb0hxhcx5br0000gn/T/ipykernel_868/1284448961.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(X2,color='blue',kde=True);\n",
      "/opt/anaconda3/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X2=np.random.normal(loc=45, scale=5,size=2000)\n",
    "sns.distplot(X2,color='blue',kde=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8b6eedee-024d-409a-9f07-d362e172e31a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/f2/n_0q5zrx2vs2kbb0hxhcx5br0000gn/T/ipykernel_868/883172086.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(X3,color='green',kde=True);\n",
      "/opt/anaconda3/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X3=np.random.normal(loc=65, scale=4,size=2000)\n",
    "sns.distplot(X3,color='green',kde=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4ce41a13-9b7c-4f55-821d-e336181f4e3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/f2/n_0q5zrx2vs2kbb0hxhcx5br0000gn/T/ipykernel_868/443046093.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(X4,color='yellow',kde=True);\n",
      "/opt/anaconda3/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X4=np.random.normal(loc=85, scale=7,size=2000)\n",
    "sns.distplot(X4,color='yellow',kde=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "73a62dc5-e408-4f8f-9a85-a0a7aff65c75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([14.50140716, 27.05608242, 31.91821482, ..., 73.12330741,\n",
       "       89.52467547, 87.44600922])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Combaining\n",
    "X=np.hstack((X1,X2,X3,X4))\n",
    "X"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77d517cc-2ef0-4ecc-bae2-7defc2a55130",
   "metadata": {},
   "source": [
    "## Finding no of clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "91f03434-8537-43d6-a27a-6a7abe9033c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.mixture import GaussianMixture\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d1924891-0bb0-4ba2-87c5-69094edbc786",
   "metadata": {},
   "outputs": [],
   "source": [
    "components=np.arange(1,11)\n",
    "aic_scores=[]\n",
    "bic_scores=[]\n",
    "for comp in components:\n",
    "    model=GaussianMixture(n_components=comp)\n",
    "    model.fit(X.reshape(-1,1))\n",
    "    aic=model.aic(X.reshape(-1,1))\n",
    "    bic=model.bic(X.reshape(-1,1))\n",
    "    aic_scores.append(aic)\n",
    "    bic_scores.append(bic)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e458e22d-01e0-467a-a57d-d8042006a56f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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6lPQkQo2btzItGnTSEpKIj4+ntLSUiIjI8nPzze7tEZv69atvPnmm1x33XVml9KoZWdn069fP7y9vfnkk0/YvXs3L7zwAk2bNjW7tEbpH//4B6+//joLFizg+++/57nnnuP555/nlVdeMbu0RiE/P5/f/OY3bvPdne25557jxRdfZMGCBWzdupXw8HAGDRrEqVOnaqU+3V4uv+r48eOEhoayceNGbrnlFrPLabTy8vK44YYbePXVV/n73//O9ddfz8svv2x2WY3SY489xtdff81XX31ldikCDB8+nLCwMBYuXOjadscdd+Dv7897771nYmWNj8ViYcWKFURHRwPO3pyIiAhmz57No48+Cjjn1gkLC+Mf//gHDzzwQI3XpB4d+VV2ux2AZs2amVxJ4zZt2jSioqJcj0sR86xevZqePXsyZswYQkND6d69O2+99ZbZZTVaN910Exs2bOCHH34A4JtvvmHTpk0MGzbM5Mrk4MGDZGVluZ50AM4HbPfv35/NmzfXSg1VeqinNB6GYfDwww9z00030bVrV7PLabSWLVvGjh072Lp1q9mlCPDjjz/y2muv8fDDD/OnP/2J5ORkZs6cidVq5d577zW7vEbn0UcfxW63c+211+Lp6UlZWRnPPPMMd999t9mlNXpZWVkAhIWFuW0PCwsjLS2tVmpQ0JGLmj59Ot9++y2bNm0yu5RG69ChQ8yaNYv169fj6+trdjmC8+HGPXv2ZN68eQB0796dXbt28dprrynomOCDDz5g8eLFvP/++3Tp0oWUlBRmz55NREQEEydONLs8wTmkdTbDMCpsqykKOnJBM2bMYPXq1Xz55ZdceeWVZpfTaG3fvp1jx47Ro0cP17aysjK+/PJLFixYQFFRkdtDcaXmtWzZks6dO7tt69SpE8uXLzeposbtj3/8I4899hjjxo0DoFu3bqSlpTF//nwFHZOFh4cDzp6dli1burYfO3asQi9PTdE1OlKBYRhMnz6djz76iM8++4y2bduaXVKjdtttt/Hdd9+RkpLiWnr27MmECRNISUlRyDFBv379Kky58MMPP9C6dWuTKmrcCgoK8PBw/znz9PTU7eV1QNu2bQkPDyc+Pt61rbi4mI0bN9K3b99aqUE9OlLBtGnTeP/991m1ahWBgYGuMVabzYafn5/J1TU+gYGBFa6PCggIoHnz5rpuyiQPPfQQffv2Zd68eYwdO5bk5GTefPNN3nzzTbNLa5RGjBjBM888w1VXXUWXLl3YuXMnL774IpMnTza7tEYhLy+P/fv3u9YPHjxISkoKzZo146qrrmL27NnMmzePDh060KFDB+bNm4e/vz/jx4+vnQINkXMA510WLVpkdmlSrn///sasWbPMLqNRW7NmjdG1a1fDarUa1157rfHmm2+aXVKjlZuba8yaNcu46qqrDF9fX6Ndu3bGE088YRQVFZldWqPw+eefn/c3Y+LEiYZhGIbD4TD+8pe/GOHh4YbVajVuueUW47vvvqu1+jSPjoiIiDRYukZHREREGiwFHREREWmwFHRERESkwVLQERERkQZLQUdEREQaLAUdERERabAUdERERKTBUtARERGRBktBR0RERBosBR0RERFpsBR0REREpMFS0BEREZEG6/8DFLZez0BUDu8AAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting\n",
    "\n",
    "plt.plot(components,aic_scores,color='red',label='AIC')\n",
    "plt.plot(components,bic_scores,color='green',label='BIC')\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a396ef3d-a969-431d-b7ee-af21b50e17be",
   "metadata": {},
   "outputs": [],
   "source": [
    "# No of components= clusters=4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9560d947-95b7-4f4a-beaf-efa70e21982b",
   "metadata": {},
   "source": [
    "## Building the model with 4 components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "def101df-36d3-4fa0-baea-826693b87431",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianMixture(n_components=4, n_init=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianMixture</label><div class=\"sk-toggleable__content\"><pre>GaussianMixture(n_components=4, n_init=10)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "GaussianMixture(n_components=4, n_init=10)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm=GaussianMixture(n_components=4,n_init=10)\n",
    "gmm.fit(X.reshape(-1,1))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "dea75592-39ed-489e-a166-b5043daa1cd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 1, 2, 2])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred=gmm.predict(X.reshape(-1,1))\n",
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dfe72d7a-fb27-486a-957d-f6bd344d7718",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2, 3])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.unique(pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "013567b1-cb6d-4e27-b3f9-7ddc3184ffb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[24.75805424],\n",
       "       [65.16452862],\n",
       "       [85.59998231],\n",
       "       [44.91932281]])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm.means_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d2ad42d0-964c-4783-b925-cee322533b68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[35.03891126]],\n",
       "\n",
       "       [[20.38918979]],\n",
       "\n",
       "       [[40.54126785]],\n",
       "\n",
       "       [[24.81623541]]])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm.covariances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "eee6d49b-e22f-4e76-8b4c-ac3f149823d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.24631262, 0.26889802, 0.23522064, 0.24956872])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm.weights_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e3f2b49-8eeb-4ab8-bf5e-c57880d19dc1",
   "metadata": {},
   "source": [
    "# Building GMM on nutraline data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "34e34b27-4259-433d-96c0-e32daf7a4630",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q2.region</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.location</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>54.0</td>\n",
       "      <td>19.596458</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>21</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>2</td>\n",
       "      <td>155</td>\n",
       "      <td>57.0</td>\n",
       "      <td>23.725286</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>38</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>1</td>\n",
       "      <td>174</td>\n",
       "      <td>69.0</td>\n",
       "      <td>22.790329</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>29</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>1</td>\n",
       "      <td>173</td>\n",
       "      <td>73.0</td>\n",
       "      <td>24.391059</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>23</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>64.0</td>\n",
       "      <td>20.661157</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>994</td>\n",
       "      <td>31</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>1</td>\n",
       "      <td>176</td>\n",
       "      <td>100.0</td>\n",
       "      <td>32.283058</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>995</td>\n",
       "      <td>29</td>\n",
       "      <td>Metropolitana</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>66.0</td>\n",
       "      <td>23.384354</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>996</td>\n",
       "      <td>23</td>\n",
       "      <td>Valparaiso</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>78.0</td>\n",
       "      <td>27.309968</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>997</td>\n",
       "      <td>29</td>\n",
       "      <td>Valparaiso</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>67.0</td>\n",
       "      <td>22.913033</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>998</td>\n",
       "      <td>36</td>\n",
       "      <td>Biobio</td>\n",
       "      <td>1</td>\n",
       "      <td>171</td>\n",
       "      <td>64.0</td>\n",
       "      <td>21.887076</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>998 rows × 115 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Q1.age      Q2.region  Q3.gender  Q4.height.cm  Q4.weight.kg  \\\n",
       "0      1      41  Metropolitana          2           166          54.0   \n",
       "1      2      21  Metropolitana          2           155          57.0   \n",
       "2      3      38  Metropolitana          1           174          69.0   \n",
       "3      4      29  Metropolitana          1           173          73.0   \n",
       "4      5      23  Metropolitana          2           176          64.0   \n",
       "..   ...     ...            ...        ...           ...           ...   \n",
       "993  994      31  Metropolitana          1           176         100.0   \n",
       "994  995      29  Metropolitana          1           168          66.0   \n",
       "995  996      23     Valparaiso          1           169          78.0   \n",
       "996  997      29     Valparaiso          2           171          67.0   \n",
       "997  998      36         Biobio          1           171          64.0   \n",
       "\n",
       "        Q4.BMI  Q5.time.since.started.supplement.consumption  \\\n",
       "0    19.596458                                             5   \n",
       "1    23.725286                                             3   \n",
       "2    22.790329                                             5   \n",
       "3    24.391059                                             5   \n",
       "4    20.661157                                             5   \n",
       "..         ...                                           ...   \n",
       "993  32.283058                                             4   \n",
       "994  23.384354                                             4   \n",
       "995  27.309968                                             5   \n",
       "996  22.913033                                             2   \n",
       "997  21.887076                                             4   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox  ...  \\\n",
       "0                                        7           0  ...   \n",
       "1                                        3           0  ...   \n",
       "2                                        7           0  ...   \n",
       "3                                        4           0  ...   \n",
       "4                                        6           0  ...   \n",
       "..                                     ...         ...  ...   \n",
       "993                                      5           0  ...   \n",
       "994                                      6           0  ...   \n",
       "995                                      6           0  ...   \n",
       "996                                      5           0  ...   \n",
       "997                                      7           0  ...   \n",
       "\n",
       "     Q21.store.choice.location  Q21.store.choice.assortment  \\\n",
       "0                            1                            1   \n",
       "1                            1                            1   \n",
       "2                            1                            0   \n",
       "3                            1                            0   \n",
       "4                            1                            1   \n",
       "..                         ...                          ...   \n",
       "993                          0                            1   \n",
       "994                          0                            0   \n",
       "995                          1                            0   \n",
       "996                          1                            0   \n",
       "997                          0                            0   \n",
       "\n",
       "     Q21.store.choice.salesperson.expertise  \\\n",
       "0                                         0   \n",
       "1                                         1   \n",
       "2                                         0   \n",
       "3                                         0   \n",
       "4                                         0   \n",
       "..                                      ...   \n",
       "993                                       1   \n",
       "994                                       0   \n",
       "995                                       0   \n",
       "996                                       0   \n",
       "997                                       1   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "0                                        0                         0   \n",
       "1                                        1                         1   \n",
       "2                                        0                         1   \n",
       "3                                        0                         0   \n",
       "4                                        0                         1   \n",
       "..                                     ...                       ...   \n",
       "993                                      0                         1   \n",
       "994                                      0                         0   \n",
       "995                                      0                         1   \n",
       "996                                      0                         0   \n",
       "997                                      0                         1   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "0                                                1   \n",
       "1                                                1   \n",
       "2                                                0   \n",
       "3                                                1   \n",
       "4                                                1   \n",
       "..                                             ...   \n",
       "993                                              1   \n",
       "994                                              1   \n",
       "995                                              1   \n",
       "996                                              0   \n",
       "997                                              1   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "0                               1                               0   \n",
       "1                               1                               1   \n",
       "2                               1                               1   \n",
       "3                               1                               1   \n",
       "4                               1                               0   \n",
       "..                            ...                             ...   \n",
       "993                             1                               1   \n",
       "994                             1                               0   \n",
       "995                             1                               0   \n",
       "996                             0                               1   \n",
       "997                             1                               1   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  \n",
       "0                     2                            4  \n",
       "1                     1                            4  \n",
       "2                     5                            4  \n",
       "3                     3                            3  \n",
       "4                     2                            6  \n",
       "..                  ...                          ...  \n",
       "993                   1                            5  \n",
       "994                   1                            5  \n",
       "995                   3                            4  \n",
       "996                   1                            3  \n",
       "997                   1                            4  \n",
       "\n",
       "[998 rows x 115 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_excel('Nutraline.xlsx',sheet_name='data')\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9dd7f6a-c39c-4a97-bdec-d1a35cad8df9",
   "metadata": {},
   "source": [
    "## Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "209d3fd3-abab-450a-923b-be213bb7206d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                                               0\n",
       "Q1.age                                           0\n",
       "Q2.region                                        0\n",
       "Q3.gender                                        0\n",
       "Q4.height.cm                                     0\n",
       "                                                ..\n",
       "Q21.store.choice.legitimate.original.products    0\n",
       "Q21.store.choice.good.prices                     0\n",
       "Q21.store.choice.ease.purchase                   0\n",
       "Q22.income.monthly                               0\n",
       "Q23.expenditure.supplements                      0\n",
       "Length: 115, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "28317b47-820d-4baa-b11e-90f76d84e5a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "string_columns=df.select_dtypes(include=['object']).columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3296f75b-f825-4567-98e5-edecfc384776",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Q2.region',\n",
       " 'Q7.other',\n",
       " 'Q9.goals.other',\n",
       " 'Q13.consumption.time.other',\n",
       " 'Q17.awareness.through.other',\n",
       " 'Q18.media.usage.other',\n",
       " 'Q19.where.buy.other']"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "string_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "72517f70-cb39-4855-867d-4724d46ae129",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>Q7.trx</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.location</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>54.0</td>\n",
       "      <td>19.596458</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>155</td>\n",
       "      <td>57.0</td>\n",
       "      <td>23.725286</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>174</td>\n",
       "      <td>69.0</td>\n",
       "      <td>22.790329</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>173</td>\n",
       "      <td>73.0</td>\n",
       "      <td>24.391059</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>64.0</td>\n",
       "      <td>20.661157</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>994</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>176</td>\n",
       "      <td>100.0</td>\n",
       "      <td>32.283058</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>995</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>66.0</td>\n",
       "      <td>23.384354</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>996</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>78.0</td>\n",
       "      <td>27.309968</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>997</td>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>67.0</td>\n",
       "      <td>22.913033</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>998</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>171</td>\n",
       "      <td>64.0</td>\n",
       "      <td>21.887076</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>998 rows × 108 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Q1.age  Q3.gender  Q4.height.cm  Q4.weight.kg     Q4.BMI  \\\n",
       "0      1      41          2           166          54.0  19.596458   \n",
       "1      2      21          2           155          57.0  23.725286   \n",
       "2      3      38          1           174          69.0  22.790329   \n",
       "3      4      29          1           173          73.0  24.391059   \n",
       "4      5      23          2           176          64.0  20.661157   \n",
       "..   ...     ...        ...           ...           ...        ...   \n",
       "993  994      31          1           176         100.0  32.283058   \n",
       "994  995      29          1           168          66.0  23.384354   \n",
       "995  996      23          1           169          78.0  27.309968   \n",
       "996  997      29          2           171          67.0  22.913033   \n",
       "997  998      36          1           171          64.0  21.887076   \n",
       "\n",
       "     Q5.time.since.started.supplement.consumption  \\\n",
       "0                                               5   \n",
       "1                                               3   \n",
       "2                                               5   \n",
       "3                                               5   \n",
       "4                                               5   \n",
       "..                                            ...   \n",
       "993                                             4   \n",
       "994                                             4   \n",
       "995                                             5   \n",
       "996                                             2   \n",
       "997                                             4   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox  Q7.trx  ...  \\\n",
       "0                                        7           0       0  ...   \n",
       "1                                        3           0       0  ...   \n",
       "2                                        7           0       0  ...   \n",
       "3                                        4           0       0  ...   \n",
       "4                                        6           0       0  ...   \n",
       "..                                     ...         ...     ...  ...   \n",
       "993                                      5           0       0  ...   \n",
       "994                                      6           0       0  ...   \n",
       "995                                      6           0       0  ...   \n",
       "996                                      5           0       0  ...   \n",
       "997                                      7           0       0  ...   \n",
       "\n",
       "     Q21.store.choice.location  Q21.store.choice.assortment  \\\n",
       "0                            1                            1   \n",
       "1                            1                            1   \n",
       "2                            1                            0   \n",
       "3                            1                            0   \n",
       "4                            1                            1   \n",
       "..                         ...                          ...   \n",
       "993                          0                            1   \n",
       "994                          0                            0   \n",
       "995                          1                            0   \n",
       "996                          1                            0   \n",
       "997                          0                            0   \n",
       "\n",
       "     Q21.store.choice.salesperson.expertise  \\\n",
       "0                                         0   \n",
       "1                                         1   \n",
       "2                                         0   \n",
       "3                                         0   \n",
       "4                                         0   \n",
       "..                                      ...   \n",
       "993                                       1   \n",
       "994                                       0   \n",
       "995                                       0   \n",
       "996                                       0   \n",
       "997                                       1   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "0                                        0                         0   \n",
       "1                                        1                         1   \n",
       "2                                        0                         1   \n",
       "3                                        0                         0   \n",
       "4                                        0                         1   \n",
       "..                                     ...                       ...   \n",
       "993                                      0                         1   \n",
       "994                                      0                         0   \n",
       "995                                      0                         1   \n",
       "996                                      0                         0   \n",
       "997                                      0                         1   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "0                                                1   \n",
       "1                                                1   \n",
       "2                                                0   \n",
       "3                                                1   \n",
       "4                                                1   \n",
       "..                                             ...   \n",
       "993                                              1   \n",
       "994                                              1   \n",
       "995                                              1   \n",
       "996                                              0   \n",
       "997                                              1   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "0                               1                               0   \n",
       "1                               1                               1   \n",
       "2                               1                               1   \n",
       "3                               1                               1   \n",
       "4                               1                               0   \n",
       "..                            ...                             ...   \n",
       "993                             1                               1   \n",
       "994                             1                               0   \n",
       "995                             1                               0   \n",
       "996                             0                               1   \n",
       "997                             1                               1   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  \n",
       "0                     2                            4  \n",
       "1                     1                            4  \n",
       "2                     5                            4  \n",
       "3                     3                            3  \n",
       "4                     2                            6  \n",
       "..                  ...                          ...  \n",
       "993                   1                            5  \n",
       "994                   1                            5  \n",
       "995                   3                            4  \n",
       "996                   1                            3  \n",
       "997                   1                            4  \n",
       "\n",
       "[998 rows x 108 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# DRoppin\n",
    "\n",
    "df_1=df.drop(string_columns,axis=1)\n",
    "df_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "576b5568-9f50-40d8-ae1e-ec0eafbaf250",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>Q7.trx</th>\n",
       "      <th>Q7.crossfit</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.location</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>54.0</td>\n",
       "      <td>19.596458</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>155</td>\n",
       "      <td>57.0</td>\n",
       "      <td>23.725286</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>174</td>\n",
       "      <td>69.0</td>\n",
       "      <td>22.790329</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>173</td>\n",
       "      <td>73.0</td>\n",
       "      <td>24.391059</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>64.0</td>\n",
       "      <td>20.661157</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>176</td>\n",
       "      <td>100.0</td>\n",
       "      <td>32.283058</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>66.0</td>\n",
       "      <td>23.384354</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>78.0</td>\n",
       "      <td>27.309968</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>67.0</td>\n",
       "      <td>22.913033</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>171</td>\n",
       "      <td>64.0</td>\n",
       "      <td>21.887076</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>998 rows × 107 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Q1.age  Q3.gender  Q4.height.cm  Q4.weight.kg     Q4.BMI  \\\n",
       "0        41          2           166          54.0  19.596458   \n",
       "1        21          2           155          57.0  23.725286   \n",
       "2        38          1           174          69.0  22.790329   \n",
       "3        29          1           173          73.0  24.391059   \n",
       "4        23          2           176          64.0  20.661157   \n",
       "..      ...        ...           ...           ...        ...   \n",
       "993      31          1           176         100.0  32.283058   \n",
       "994      29          1           168          66.0  23.384354   \n",
       "995      23          1           169          78.0  27.309968   \n",
       "996      29          2           171          67.0  22.913033   \n",
       "997      36          1           171          64.0  21.887076   \n",
       "\n",
       "     Q5.time.since.started.supplement.consumption  \\\n",
       "0                                               5   \n",
       "1                                               3   \n",
       "2                                               5   \n",
       "3                                               5   \n",
       "4                                               5   \n",
       "..                                            ...   \n",
       "993                                             4   \n",
       "994                                             4   \n",
       "995                                             5   \n",
       "996                                             2   \n",
       "997                                             4   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox  Q7.trx  Q7.crossfit  \\\n",
       "0                                        7           0       0            0   \n",
       "1                                        3           0       0            0   \n",
       "2                                        7           0       0            0   \n",
       "3                                        4           0       0            1   \n",
       "4                                        6           0       0            1   \n",
       "..                                     ...         ...     ...          ...   \n",
       "993                                      5           0       0            1   \n",
       "994                                      6           0       0            0   \n",
       "995                                      6           0       0            0   \n",
       "996                                      5           0       0            0   \n",
       "997                                      7           0       0            1   \n",
       "\n",
       "     ...  Q21.store.choice.location  Q21.store.choice.assortment  \\\n",
       "0    ...                          1                            1   \n",
       "1    ...                          1                            1   \n",
       "2    ...                          1                            0   \n",
       "3    ...                          1                            0   \n",
       "4    ...                          1                            1   \n",
       "..   ...                        ...                          ...   \n",
       "993  ...                          0                            1   \n",
       "994  ...                          0                            0   \n",
       "995  ...                          1                            0   \n",
       "996  ...                          1                            0   \n",
       "997  ...                          0                            0   \n",
       "\n",
       "     Q21.store.choice.salesperson.expertise  \\\n",
       "0                                         0   \n",
       "1                                         1   \n",
       "2                                         0   \n",
       "3                                         0   \n",
       "4                                         0   \n",
       "..                                      ...   \n",
       "993                                       1   \n",
       "994                                       0   \n",
       "995                                       0   \n",
       "996                                       0   \n",
       "997                                       1   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "0                                        0                         0   \n",
       "1                                        1                         1   \n",
       "2                                        0                         1   \n",
       "3                                        0                         0   \n",
       "4                                        0                         1   \n",
       "..                                     ...                       ...   \n",
       "993                                      0                         1   \n",
       "994                                      0                         0   \n",
       "995                                      0                         1   \n",
       "996                                      0                         0   \n",
       "997                                      0                         1   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "0                                                1   \n",
       "1                                                1   \n",
       "2                                                0   \n",
       "3                                                1   \n",
       "4                                                1   \n",
       "..                                             ...   \n",
       "993                                              1   \n",
       "994                                              1   \n",
       "995                                              1   \n",
       "996                                              0   \n",
       "997                                              1   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "0                               1                               0   \n",
       "1                               1                               1   \n",
       "2                               1                               1   \n",
       "3                               1                               1   \n",
       "4                               1                               0   \n",
       "..                            ...                             ...   \n",
       "993                             1                               1   \n",
       "994                             1                               0   \n",
       "995                             1                               0   \n",
       "996                             0                               1   \n",
       "997                             1                               1   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  \n",
       "0                     2                            4  \n",
       "1                     1                            4  \n",
       "2                     5                            4  \n",
       "3                     3                            3  \n",
       "4                     2                            6  \n",
       "..                  ...                          ...  \n",
       "993                   1                            5  \n",
       "994                   1                            5  \n",
       "995                   3                            4  \n",
       "996                   1                            3  \n",
       "997                   1                            4  \n",
       "\n",
       "[998 rows x 107 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dropping ID\n",
    "df_1=df_1.drop(['ID'],axis=1)\n",
    "df_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "86dc8ac4-ff25-428e-8b13-096749b6d15f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.26850938,  1.54000702, -0.59521741, ..., -0.80596946,\n",
       "        -0.27808623, -0.05563138],\n",
       "       [-1.23762219,  1.54000702, -1.89687015, ...,  1.2407418 ,\n",
       "        -1.07102926, -0.05563138],\n",
       "       [ 0.89258964, -0.64934769,  0.35143913, ...,  1.2407418 ,\n",
       "         2.10074286, -0.05563138],\n",
       "       ...,\n",
       "       [-0.98700903, -0.64934769, -0.24022121, ..., -0.80596946,\n",
       "         0.5148568 , -0.05563138],\n",
       "       [-0.23516956,  1.54000702, -0.00355708, ...,  1.2407418 ,\n",
       "        -1.07102926, -0.93690305],\n",
       "       [ 0.64197649, -0.64934769, -0.00355708, ...,  1.2407418 ,\n",
       "        -1.07102926, -0.05563138]])"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "scaler=StandardScaler()\n",
    "X=scaler.fit_transform(df_1)\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "859791a8-16a1-4551-b6bd-6054954707c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>Q7.trx</th>\n",
       "      <th>Q7.crossfit</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.location</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.268509</td>\n",
       "      <td>1.540007</td>\n",
       "      <td>-0.595217</td>\n",
       "      <td>-1.504329</td>\n",
       "      <td>-1.636878</td>\n",
       "      <td>1.077831</td>\n",
       "      <td>1.280568</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>-0.449900</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>0.797537</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>-1.139973</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>-0.805969</td>\n",
       "      <td>-0.278086</td>\n",
       "      <td>-0.055631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.237622</td>\n",
       "      <td>1.540007</td>\n",
       "      <td>-1.896870</td>\n",
       "      <td>-1.265305</td>\n",
       "      <td>-0.339397</td>\n",
       "      <td>-0.646008</td>\n",
       "      <td>-1.645607</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>-0.449900</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>0.797537</td>\n",
       "      <td>0.986069</td>\n",
       "      <td>1.706964</td>\n",
       "      <td>0.877214</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>1.240742</td>\n",
       "      <td>-1.071029</td>\n",
       "      <td>-0.055631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.892590</td>\n",
       "      <td>-0.649348</td>\n",
       "      <td>0.351439</td>\n",
       "      <td>-0.309207</td>\n",
       "      <td>-0.633207</td>\n",
       "      <td>1.077831</td>\n",
       "      <td>1.280568</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>-0.449900</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>-1.253860</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>0.877214</td>\n",
       "      <td>-1.609325</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>1.240742</td>\n",
       "      <td>2.100743</td>\n",
       "      <td>-0.055631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.235170</td>\n",
       "      <td>-0.649348</td>\n",
       "      <td>0.233107</td>\n",
       "      <td>0.009492</td>\n",
       "      <td>-0.130178</td>\n",
       "      <td>1.077831</td>\n",
       "      <td>-0.914063</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>2.222718</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>-1.253860</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>-1.139973</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>1.240742</td>\n",
       "      <td>0.514857</td>\n",
       "      <td>-0.936903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.987009</td>\n",
       "      <td>1.540007</td>\n",
       "      <td>0.588103</td>\n",
       "      <td>-0.707581</td>\n",
       "      <td>-1.302297</td>\n",
       "      <td>1.077831</td>\n",
       "      <td>0.549024</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>2.222718</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>0.797537</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>0.877214</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>-0.805969</td>\n",
       "      <td>-0.278086</td>\n",
       "      <td>1.706912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>0.015444</td>\n",
       "      <td>-0.649348</td>\n",
       "      <td>0.588103</td>\n",
       "      <td>2.160712</td>\n",
       "      <td>2.349877</td>\n",
       "      <td>0.215912</td>\n",
       "      <td>-0.182519</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>2.222718</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.836762</td>\n",
       "      <td>0.797537</td>\n",
       "      <td>0.986069</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>0.877214</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>1.240742</td>\n",
       "      <td>-1.071029</td>\n",
       "      <td>0.825640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>-0.235170</td>\n",
       "      <td>-0.649348</td>\n",
       "      <td>-0.358553</td>\n",
       "      <td>-0.548231</td>\n",
       "      <td>-0.446535</td>\n",
       "      <td>0.215912</td>\n",
       "      <td>0.549024</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>-0.449900</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.836762</td>\n",
       "      <td>-1.253860</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>-1.139973</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>-0.805969</td>\n",
       "      <td>-1.071029</td>\n",
       "      <td>0.825640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>-0.987009</td>\n",
       "      <td>-0.649348</td>\n",
       "      <td>-0.240221</td>\n",
       "      <td>0.407866</td>\n",
       "      <td>0.787087</td>\n",
       "      <td>1.077831</td>\n",
       "      <td>0.549024</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>-0.449900</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>-1.253860</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>0.877214</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>-0.805969</td>\n",
       "      <td>0.514857</td>\n",
       "      <td>-0.055631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>-0.235170</td>\n",
       "      <td>1.540007</td>\n",
       "      <td>-0.003557</td>\n",
       "      <td>-0.468557</td>\n",
       "      <td>-0.594647</td>\n",
       "      <td>-1.507927</td>\n",
       "      <td>-0.182519</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>-0.449900</td>\n",
       "      <td>...</td>\n",
       "      <td>1.195083</td>\n",
       "      <td>-1.253860</td>\n",
       "      <td>-1.014128</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>-1.139973</td>\n",
       "      <td>-1.609325</td>\n",
       "      <td>-2.425440</td>\n",
       "      <td>1.240742</td>\n",
       "      <td>-1.071029</td>\n",
       "      <td>-0.936903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0.641976</td>\n",
       "      <td>-0.649348</td>\n",
       "      <td>-0.003557</td>\n",
       "      <td>-0.707581</td>\n",
       "      <td>-0.917053</td>\n",
       "      <td>0.215912</td>\n",
       "      <td>1.280568</td>\n",
       "      <td>-0.131641</td>\n",
       "      <td>-0.305122</td>\n",
       "      <td>2.222718</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.836762</td>\n",
       "      <td>-1.253860</td>\n",
       "      <td>0.986069</td>\n",
       "      <td>-0.585835</td>\n",
       "      <td>0.877214</td>\n",
       "      <td>0.621378</td>\n",
       "      <td>0.412296</td>\n",
       "      <td>1.240742</td>\n",
       "      <td>-1.071029</td>\n",
       "      <td>-0.055631</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>998 rows × 107 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Q1.age  Q3.gender  Q4.height.cm  Q4.weight.kg    Q4.BMI  \\\n",
       "0    1.268509   1.540007     -0.595217     -1.504329 -1.636878   \n",
       "1   -1.237622   1.540007     -1.896870     -1.265305 -0.339397   \n",
       "2    0.892590  -0.649348      0.351439     -0.309207 -0.633207   \n",
       "3   -0.235170  -0.649348      0.233107      0.009492 -0.130178   \n",
       "4   -0.987009   1.540007      0.588103     -0.707581 -1.302297   \n",
       "..        ...        ...           ...           ...       ...   \n",
       "993  0.015444  -0.649348      0.588103      2.160712  2.349877   \n",
       "994 -0.235170  -0.649348     -0.358553     -0.548231 -0.446535   \n",
       "995 -0.987009  -0.649348     -0.240221      0.407866  0.787087   \n",
       "996 -0.235170   1.540007     -0.003557     -0.468557 -0.594647   \n",
       "997  0.641976  -0.649348     -0.003557     -0.707581 -0.917053   \n",
       "\n",
       "     Q5.time.since.started.supplement.consumption  \\\n",
       "0                                        1.077831   \n",
       "1                                       -0.646008   \n",
       "2                                        1.077831   \n",
       "3                                        1.077831   \n",
       "4                                        1.077831   \n",
       "..                                            ...   \n",
       "993                                      0.215912   \n",
       "994                                      0.215912   \n",
       "995                                      1.077831   \n",
       "996                                     -1.507927   \n",
       "997                                      0.215912   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox    Q7.trx  Q7.crossfit  \\\n",
       "0                                 1.280568   -0.131641 -0.305122    -0.449900   \n",
       "1                                -1.645607   -0.131641 -0.305122    -0.449900   \n",
       "2                                 1.280568   -0.131641 -0.305122    -0.449900   \n",
       "3                                -0.914063   -0.131641 -0.305122     2.222718   \n",
       "4                                 0.549024   -0.131641 -0.305122     2.222718   \n",
       "..                                     ...         ...       ...          ...   \n",
       "993                              -0.182519   -0.131641 -0.305122     2.222718   \n",
       "994                               0.549024   -0.131641 -0.305122    -0.449900   \n",
       "995                               0.549024   -0.131641 -0.305122    -0.449900   \n",
       "996                              -0.182519   -0.131641 -0.305122    -0.449900   \n",
       "997                               1.280568   -0.131641 -0.305122     2.222718   \n",
       "\n",
       "     ...  Q21.store.choice.location  Q21.store.choice.assortment  \\\n",
       "0    ...                   1.195083                     0.797537   \n",
       "1    ...                   1.195083                     0.797537   \n",
       "2    ...                   1.195083                    -1.253860   \n",
       "3    ...                   1.195083                    -1.253860   \n",
       "4    ...                   1.195083                     0.797537   \n",
       "..   ...                        ...                          ...   \n",
       "993  ...                  -0.836762                     0.797537   \n",
       "994  ...                  -0.836762                    -1.253860   \n",
       "995  ...                   1.195083                    -1.253860   \n",
       "996  ...                   1.195083                    -1.253860   \n",
       "997  ...                  -0.836762                    -1.253860   \n",
       "\n",
       "     Q21.store.choice.salesperson.expertise  \\\n",
       "0                                 -1.014128   \n",
       "1                                  0.986069   \n",
       "2                                 -1.014128   \n",
       "3                                 -1.014128   \n",
       "4                                 -1.014128   \n",
       "..                                      ...   \n",
       "993                                0.986069   \n",
       "994                               -1.014128   \n",
       "995                               -1.014128   \n",
       "996                               -1.014128   \n",
       "997                                0.986069   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "0                                -0.585835                 -1.139973   \n",
       "1                                 1.706964                  0.877214   \n",
       "2                                -0.585835                  0.877214   \n",
       "3                                -0.585835                 -1.139973   \n",
       "4                                -0.585835                  0.877214   \n",
       "..                                     ...                       ...   \n",
       "993                              -0.585835                  0.877214   \n",
       "994                              -0.585835                 -1.139973   \n",
       "995                              -0.585835                  0.877214   \n",
       "996                              -0.585835                 -1.139973   \n",
       "997                              -0.585835                  0.877214   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "0                                         0.621378   \n",
       "1                                         0.621378   \n",
       "2                                        -1.609325   \n",
       "3                                         0.621378   \n",
       "4                                         0.621378   \n",
       "..                                             ...   \n",
       "993                                       0.621378   \n",
       "994                                       0.621378   \n",
       "995                                       0.621378   \n",
       "996                                      -1.609325   \n",
       "997                                       0.621378   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "0                        0.412296                       -0.805969   \n",
       "1                        0.412296                        1.240742   \n",
       "2                        0.412296                        1.240742   \n",
       "3                        0.412296                        1.240742   \n",
       "4                        0.412296                       -0.805969   \n",
       "..                            ...                             ...   \n",
       "993                      0.412296                        1.240742   \n",
       "994                      0.412296                       -0.805969   \n",
       "995                      0.412296                       -0.805969   \n",
       "996                     -2.425440                        1.240742   \n",
       "997                      0.412296                        1.240742   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  \n",
       "0             -0.278086                    -0.055631  \n",
       "1             -1.071029                    -0.055631  \n",
       "2              2.100743                    -0.055631  \n",
       "3              0.514857                    -0.936903  \n",
       "4             -0.278086                     1.706912  \n",
       "..                  ...                          ...  \n",
       "993           -1.071029                     0.825640  \n",
       "994           -1.071029                     0.825640  \n",
       "995            0.514857                    -0.055631  \n",
       "996           -1.071029                    -0.936903  \n",
       "997           -1.071029                    -0.055631  \n",
       "\n",
       "[998 rows x 107 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_2=pd.DataFrame(X,columns=df_1.columns)\n",
    "df_2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2081a0a-79ac-42ad-8d7a-c77ade25d7a9",
   "metadata": {},
   "source": [
    "## Finding no of components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "8352e188-88e5-404e-867b-212d05589bd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "components=np.arange(1,11)\n",
    "aic_scores=[]\n",
    "bic_scores=[]\n",
    "for comp in components:\n",
    "    model=GaussianMixture(n_components=comp)\n",
    "    model.fit(df_2)\n",
    "    aic=model.aic(df_2)\n",
    "    bic=model.bic(df_2)\n",
    "    aic_scores.append(aic)\n",
    "    bic_scores.append(bic)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fdcb9f97-78ea-4825-aae4-546eafb5b036",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting\n",
    "\n",
    "plt.plot(components,aic_scores,color='red',label='AIC')\n",
    "plt.plot(components,bic_scores,color='green',label='BIC')\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7a1d1dff-19a7-4d08-aabd-c833cab46b7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# No of components=2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9e48ca4e-086a-4df5-a942-1d84a79aae9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianMixture(n_components=2, n_init=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianMixture</label><div class=\"sk-toggleable__content\"><pre>GaussianMixture(n_components=2, n_init=10)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "GaussianMixture(n_components=2, n_init=10)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm= GaussianMixture(n_components=2,n_init=10)\n",
    "gmm.fit(df_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "57582b06-ecda-4bdd-aba5-002b7ed5b9af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n",
       "       1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0,\n",
       "       0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n",
       "       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n",
       "       0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1,\n",
       "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n",
       "       0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n",
       "       0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,\n",
       "       1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
       "       0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n",
       "       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n",
       "       1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n",
       "       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,\n",
       "       0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,\n",
       "       1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n",
       "       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred=gmm.predict(df_2)\n",
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0b1153d1-38dd-4042-8d0b-3f82f49e3fec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.73127266e-02, -1.40795761e-01,  1.21702666e-01,\n",
       "         4.68877376e-02, -3.23850430e-02,  1.31269677e-01,\n",
       "         8.10001136e-02, -1.31640631e-01,  1.92838813e-03,\n",
       "         2.48422030e-02, -4.09856156e-02,  8.64376878e-03,\n",
       "        -2.96838685e-02, -1.01572197e-02, -2.21480847e-01,\n",
       "        -1.63551127e-01,  3.59384117e-02,  3.15502607e-02,\n",
       "         3.49179911e-02,  2.36423472e-02, -2.98272664e-03,\n",
       "         9.14959948e-02, -7.91676961e-03, -3.12881665e-02,\n",
       "         1.07870161e-01,  8.61698503e-02,  8.94904758e-02,\n",
       "         9.42598958e-02,  9.55435981e-02,  2.34713245e-02,\n",
       "        -1.20162539e-01,  4.08124732e-02, -5.75148280e-02,\n",
       "         8.00167856e-03,  2.17738066e-02,  3.37742061e-02,\n",
       "         3.20565798e-01,  1.79203655e-02,  6.58146847e-02,\n",
       "         8.24433258e-02, -1.39702035e-02, -5.03433136e-02,\n",
       "        -3.79287391e-02,  6.55269421e-02,  1.62527142e-01,\n",
       "         7.08755252e-02, -5.29610070e-02,  8.10264237e-02,\n",
       "         5.86893521e-02,  2.88406899e-02,  7.36267813e-03,\n",
       "        -7.62247071e-03, -3.35516078e-02, -2.77472317e-03,\n",
       "        -1.68283320e-02,  5.14141612e-02,  2.71280765e-02,\n",
       "         4.96849088e-02, -2.36595396e-03,  3.48020663e-02,\n",
       "         4.19686027e-02, -2.37517615e-02,  3.53764125e-02,\n",
       "         1.64741698e-02,  1.21122586e-02,  5.90601910e-02,\n",
       "         2.13603867e-02,  2.48565441e-02, -3.19013749e-02,\n",
       "        -5.78454370e-02,  7.19594706e-02,  1.29205018e-02,\n",
       "        -5.02847503e-03, -3.03233734e-02,  9.86817226e-03,\n",
       "         1.33970636e-07, -1.78224768e-02,  4.43768940e-02,\n",
       "        -2.13133547e-03,  4.18252608e-03, -4.62524464e-02,\n",
       "        -1.68366343e-02,  1.23617736e-02, -1.97527304e-02,\n",
       "         1.30476072e-01, -3.40992594e-02, -3.60466911e-02,\n",
       "        -3.02023329e-02, -3.63719913e-02,  1.04592373e-02,\n",
       "        -1.00605455e-01, -1.64341964e-02, -2.15372734e-02,\n",
       "        -6.83662302e-04,  2.55244101e-02,  1.42452703e-03,\n",
       "         1.11757700e-02, -8.81216384e-03,  3.05037364e-02,\n",
       "        -1.27605045e-02,  6.55232889e-03,  1.27235795e-02,\n",
       "         3.47264372e-03,  1.04561006e-02,  3.80854245e-02,\n",
       "         6.36660297e-02,  8.66857255e-02],\n",
       "       [ 7.22357980e-02,  5.87457678e-01, -5.07793452e-01,\n",
       "        -1.95634877e-01,  1.35123686e-01, -5.47710948e-01,\n",
       "        -3.37965705e-01,  5.49258722e-01, -8.04602641e-03,\n",
       "        -1.03651863e-01,  1.71008803e-01, -3.60653496e-02,\n",
       "         1.23853277e-01,  4.23800878e-02,  9.24108960e-01,\n",
       "         6.82402401e-01, -1.49949798e-01, -1.31640631e-01,\n",
       "        -1.45692184e-01, -9.86455723e-02,  1.24451592e-02,\n",
       "        -3.81758828e-01,  3.30320108e-02,  1.30547067e-01,\n",
       "        -4.50078566e-01, -3.59535968e-01, -3.73390979e-01,\n",
       "        -3.93290957e-01, -3.98647089e-01, -9.79319953e-02,\n",
       "         5.01367409e-01, -1.70286382e-01,  2.39975459e-01,\n",
       "        -3.33862857e-02, -9.08492543e-02, -1.40919844e-01,\n",
       "        -1.33753203e+00, -7.47711168e-02, -2.74605866e-01,\n",
       "        -3.43987379e-01,  5.82894203e-02,  2.10052958e-01,\n",
       "         1.58254260e-01, -2.73405286e-01, -6.78129917e-01,\n",
       "        -2.95721769e-01,  2.20975049e-01, -3.38075482e-01,\n",
       "        -2.44876055e-01, -1.20335190e-01, -3.07201138e-02,\n",
       "         3.18040750e-02,  1.39991073e-01,  1.15772834e-02,\n",
       "         7.02147050e-02, -2.14520974e-01, -1.13189465e-01,\n",
       "        -2.07305823e-01,  9.87173058e-03, -1.45208499e-01,\n",
       "        -1.75110229e-01,  9.91020933e-02, -1.47604907e-01,\n",
       "        -6.87369952e-02, -5.05373121e-02, -2.46423347e-01,\n",
       "        -8.91242965e-02, -1.03711700e-01,  1.33105624e-01,\n",
       "         2.41354895e-01, -3.00244434e-01, -5.39096344e-02,\n",
       "         2.09808608e-02,  1.26521554e-01, -4.11740632e-02,\n",
       "        -5.58980459e-07,  7.43626851e-02, -1.85158608e-01,\n",
       "         8.89280599e-03, -1.74512148e-02,  1.92984182e-01,\n",
       "         7.02493458e-02, -5.15783911e-02,  8.24164951e-02,\n",
       "        -5.44399700e-01,  1.42276100e-01,  1.50401584e-01,\n",
       "         1.26016524e-01,  1.51758870e-01, -4.36402292e-02,\n",
       "         4.19767231e-01,  6.85702095e-02,  8.98623407e-02,\n",
       "         2.85251960e-03, -1.06498311e-01, -5.94371119e-03,\n",
       "        -4.66298974e-02,  3.67679628e-02, -1.27274103e-01,\n",
       "         5.32420600e-02, -2.73390043e-02, -5.30879939e-02,\n",
       "        -1.44892943e-02, -4.36271414e-02, -1.58908016e-01,\n",
       "        -2.65640796e-01, -3.61688411e-01]])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm.means_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8affde5b-9417-4221-baed-d02ff290faa5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[ 0.97657587, -0.03309654, -0.01582507, ..., -0.01599623,\n",
       "          0.55257995,  0.13827005],\n",
       "        [-0.03309654,  0.8547765 , -0.55638814, ..., -0.05075096,\n",
       "         -0.0551955 , -0.00527105],\n",
       "        [-0.01582507, -0.55638814,  0.87027944, ...,  0.01821866,\n",
       "          0.06477207, -0.00887133],\n",
       "        ...,\n",
       "        [-0.01599623, -0.05075096,  0.01821866, ...,  1.01510899,\n",
       "          0.06433   , -0.03050553],\n",
       "        [ 0.55257995, -0.0551955 ,  0.06477207, ...,  0.06433   ,\n",
       "          1.0461799 ,  0.21785502],\n",
       "        [ 0.13827005, -0.00527105, -0.00887133, ..., -0.03050553,\n",
       "          0.21785502,  0.98884537]],\n",
       "\n",
       "       [[ 1.09127164, -0.06170171, -0.03338295, ...,  0.00445811,\n",
       "          0.3502572 ,  0.05341883],\n",
       "        [-0.06170171,  1.17811914, -0.85063991, ...,  0.08220872,\n",
       "         -0.18634507, -0.09144982],\n",
       "        [-0.03338295, -0.85063991,  1.22159856, ...,  0.02376694,\n",
       "          0.22364305,  0.04179456],\n",
       "        ...,\n",
       "        [ 0.00445811,  0.08220872,  0.02376694, ...,  0.90566043,\n",
       "          0.06764373,  0.0017311 ],\n",
       "        [ 0.3502572 , -0.18634507,  0.22364305, ...,  0.06764373,\n",
       "          0.71984636,  0.13052056],\n",
       "        [ 0.05341883, -0.09144982,  0.04179456, ...,  0.0017311 ,\n",
       "          0.13052056,  0.88437514]]])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm.covariances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2ed1af92-d36e-4a44-917c-bcfc0622f403",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.80666653, 0.19333347])"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gmm.weights_\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "8211e5b8-48f9-4ca8-b7c9-a618f9058155",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>Q7.trx</th>\n",
       "      <th>Q7.crossfit</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "      <th>Cluster_label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>54.0</td>\n",
       "      <td>19.596458</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>155</td>\n",
       "      <td>57.0</td>\n",
       "      <td>23.725286</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>174</td>\n",
       "      <td>69.0</td>\n",
       "      <td>22.790329</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>173</td>\n",
       "      <td>73.0</td>\n",
       "      <td>24.391059</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>64.0</td>\n",
       "      <td>20.661157</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>176</td>\n",
       "      <td>100.0</td>\n",
       "      <td>32.283058</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>66.0</td>\n",
       "      <td>23.384354</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>78.0</td>\n",
       "      <td>27.309968</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>67.0</td>\n",
       "      <td>22.913033</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>171</td>\n",
       "      <td>64.0</td>\n",
       "      <td>21.887076</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>998 rows × 108 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Q1.age  Q3.gender  Q4.height.cm  Q4.weight.kg     Q4.BMI  \\\n",
       "0        41          2           166          54.0  19.596458   \n",
       "1        21          2           155          57.0  23.725286   \n",
       "2        38          1           174          69.0  22.790329   \n",
       "3        29          1           173          73.0  24.391059   \n",
       "4        23          2           176          64.0  20.661157   \n",
       "..      ...        ...           ...           ...        ...   \n",
       "993      31          1           176         100.0  32.283058   \n",
       "994      29          1           168          66.0  23.384354   \n",
       "995      23          1           169          78.0  27.309968   \n",
       "996      29          2           171          67.0  22.913033   \n",
       "997      36          1           171          64.0  21.887076   \n",
       "\n",
       "     Q5.time.since.started.supplement.consumption  \\\n",
       "0                                               5   \n",
       "1                                               3   \n",
       "2                                               5   \n",
       "3                                               5   \n",
       "4                                               5   \n",
       "..                                            ...   \n",
       "993                                             4   \n",
       "994                                             4   \n",
       "995                                             5   \n",
       "996                                             2   \n",
       "997                                             4   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox  Q7.trx  Q7.crossfit  \\\n",
       "0                                        7           0       0            0   \n",
       "1                                        3           0       0            0   \n",
       "2                                        7           0       0            0   \n",
       "3                                        4           0       0            1   \n",
       "4                                        6           0       0            1   \n",
       "..                                     ...         ...     ...          ...   \n",
       "993                                      5           0       0            1   \n",
       "994                                      6           0       0            0   \n",
       "995                                      6           0       0            0   \n",
       "996                                      5           0       0            0   \n",
       "997                                      7           0       0            1   \n",
       "\n",
       "     ...  Q21.store.choice.assortment  Q21.store.choice.salesperson.expertise  \\\n",
       "0    ...                            1                                       0   \n",
       "1    ...                            1                                       1   \n",
       "2    ...                            0                                       0   \n",
       "3    ...                            0                                       0   \n",
       "4    ...                            1                                       0   \n",
       "..   ...                          ...                                     ...   \n",
       "993  ...                            1                                       1   \n",
       "994  ...                            0                                       0   \n",
       "995  ...                            0                                       0   \n",
       "996  ...                            0                                       0   \n",
       "997  ...                            0                                       1   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "0                                        0                         0   \n",
       "1                                        1                         1   \n",
       "2                                        0                         1   \n",
       "3                                        0                         0   \n",
       "4                                        0                         1   \n",
       "..                                     ...                       ...   \n",
       "993                                      0                         1   \n",
       "994                                      0                         0   \n",
       "995                                      0                         1   \n",
       "996                                      0                         0   \n",
       "997                                      0                         1   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "0                                                1   \n",
       "1                                                1   \n",
       "2                                                0   \n",
       "3                                                1   \n",
       "4                                                1   \n",
       "..                                             ...   \n",
       "993                                              1   \n",
       "994                                              1   \n",
       "995                                              1   \n",
       "996                                              0   \n",
       "997                                              1   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "0                               1                               0   \n",
       "1                               1                               1   \n",
       "2                               1                               1   \n",
       "3                               1                               1   \n",
       "4                               1                               0   \n",
       "..                            ...                             ...   \n",
       "993                             1                               1   \n",
       "994                             1                               0   \n",
       "995                             1                               0   \n",
       "996                             0                               1   \n",
       "997                             1                               1   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  Cluster_label  \n",
       "0                     2                            4              0  \n",
       "1                     1                            4              1  \n",
       "2                     5                            4              0  \n",
       "3                     3                            3              0  \n",
       "4                     2                            6              0  \n",
       "..                  ...                          ...            ...  \n",
       "993                   1                            5              0  \n",
       "994                   1                            5              0  \n",
       "995                   3                            4              0  \n",
       "996                   1                            3              0  \n",
       "997                   1                            4              0  \n",
       "\n",
       "[998 rows x 108 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1['Cluster_label']=pred\n",
    "df_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d0f014da-edd5-46e3-a614-a7d3d81cd3e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cluster_label\n",
       "0    805\n",
       "1    193\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1['Cluster_label'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "c4cea47f-54ad-4863-9e1d-36e1cb374cb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>Q7.trx</th>\n",
       "      <th>Q7.crossfit</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "      <th>Cluster_label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>54.0</td>\n",
       "      <td>19.596458</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>174</td>\n",
       "      <td>69.0</td>\n",
       "      <td>22.790329</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>173</td>\n",
       "      <td>73.0</td>\n",
       "      <td>24.391059</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>64.0</td>\n",
       "      <td>20.661157</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>172</td>\n",
       "      <td>90.0</td>\n",
       "      <td>30.421850</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>176</td>\n",
       "      <td>100.0</td>\n",
       "      <td>32.283058</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>66.0</td>\n",
       "      <td>23.384354</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>78.0</td>\n",
       "      <td>27.309968</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>67.0</td>\n",
       "      <td>22.913033</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>171</td>\n",
       "      <td>64.0</td>\n",
       "      <td>21.887076</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>805 rows × 108 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Q1.age  Q3.gender  Q4.height.cm  Q4.weight.kg     Q4.BMI  \\\n",
       "0        41          2           166          54.0  19.596458   \n",
       "2        38          1           174          69.0  22.790329   \n",
       "3        29          1           173          73.0  24.391059   \n",
       "4        23          2           176          64.0  20.661157   \n",
       "5        30          1           172          90.0  30.421850   \n",
       "..      ...        ...           ...           ...        ...   \n",
       "993      31          1           176         100.0  32.283058   \n",
       "994      29          1           168          66.0  23.384354   \n",
       "995      23          1           169          78.0  27.309968   \n",
       "996      29          2           171          67.0  22.913033   \n",
       "997      36          1           171          64.0  21.887076   \n",
       "\n",
       "     Q5.time.since.started.supplement.consumption  \\\n",
       "0                                               5   \n",
       "2                                               5   \n",
       "3                                               5   \n",
       "4                                               5   \n",
       "5                                               2   \n",
       "..                                            ...   \n",
       "993                                             4   \n",
       "994                                             4   \n",
       "995                                             5   \n",
       "996                                             2   \n",
       "997                                             4   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox  Q7.trx  Q7.crossfit  \\\n",
       "0                                        7           0       0            0   \n",
       "2                                        7           0       0            0   \n",
       "3                                        4           0       0            1   \n",
       "4                                        6           0       0            1   \n",
       "5                                        6           0       0            0   \n",
       "..                                     ...         ...     ...          ...   \n",
       "993                                      5           0       0            1   \n",
       "994                                      6           0       0            0   \n",
       "995                                      6           0       0            0   \n",
       "996                                      5           0       0            0   \n",
       "997                                      7           0       0            1   \n",
       "\n",
       "     ...  Q21.store.choice.assortment  Q21.store.choice.salesperson.expertise  \\\n",
       "0    ...                            1                                       0   \n",
       "2    ...                            0                                       0   \n",
       "3    ...                            0                                       0   \n",
       "4    ...                            1                                       0   \n",
       "5    ...                            1                                       1   \n",
       "..   ...                          ...                                     ...   \n",
       "993  ...                            1                                       1   \n",
       "994  ...                            0                                       0   \n",
       "995  ...                            0                                       0   \n",
       "996  ...                            0                                       0   \n",
       "997  ...                            0                                       1   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "0                                        0                         0   \n",
       "2                                        0                         1   \n",
       "3                                        0                         0   \n",
       "4                                        0                         1   \n",
       "5                                        1                         1   \n",
       "..                                     ...                       ...   \n",
       "993                                      0                         1   \n",
       "994                                      0                         0   \n",
       "995                                      0                         1   \n",
       "996                                      0                         0   \n",
       "997                                      0                         1   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "0                                                1   \n",
       "2                                                0   \n",
       "3                                                1   \n",
       "4                                                1   \n",
       "5                                                1   \n",
       "..                                             ...   \n",
       "993                                              1   \n",
       "994                                              1   \n",
       "995                                              1   \n",
       "996                                              0   \n",
       "997                                              1   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "0                               1                               0   \n",
       "2                               1                               1   \n",
       "3                               1                               1   \n",
       "4                               1                               0   \n",
       "5                               1                               1   \n",
       "..                            ...                             ...   \n",
       "993                             1                               1   \n",
       "994                             1                               0   \n",
       "995                             1                               0   \n",
       "996                             0                               1   \n",
       "997                             1                               1   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  Cluster_label  \n",
       "0                     2                            4              0  \n",
       "2                     5                            4              0  \n",
       "3                     3                            3              0  \n",
       "4                     2                            6              0  \n",
       "5                     2                            4              0  \n",
       "..                  ...                          ...            ...  \n",
       "993                   1                            5              0  \n",
       "994                   1                            5              0  \n",
       "995                   3                            4              0  \n",
       "996                   1                            3              0  \n",
       "997                   1                            4              0  \n",
       "\n",
       "[805 rows x 108 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[df_1['Cluster_label']==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4b68cc04-c256-434f-8b9e-f66745d55fbc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1.age</th>\n",
       "      <th>Q3.gender</th>\n",
       "      <th>Q4.height.cm</th>\n",
       "      <th>Q4.weight.kg</th>\n",
       "      <th>Q4.BMI</th>\n",
       "      <th>Q5.time.since.started.supplement.consumption</th>\n",
       "      <th>Q6.frequency.weekly.physical.activity</th>\n",
       "      <th>Q7.aerobox</th>\n",
       "      <th>Q7.trx</th>\n",
       "      <th>Q7.crossfit</th>\n",
       "      <th>...</th>\n",
       "      <th>Q21.store.choice.assortment</th>\n",
       "      <th>Q21.store.choice.salesperson.expertise</th>\n",
       "      <th>Q21.store.choice.attractiveness.store</th>\n",
       "      <th>Q21.store.choice.service</th>\n",
       "      <th>Q21.store.choice.legitimate.original.products</th>\n",
       "      <th>Q21.store.choice.good.prices</th>\n",
       "      <th>Q21.store.choice.ease.purchase</th>\n",
       "      <th>Q22.income.monthly</th>\n",
       "      <th>Q23.expenditure.supplements</th>\n",
       "      <th>Cluster_label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>155</td>\n",
       "      <td>57.0</td>\n",
       "      <td>23.725286</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>173</td>\n",
       "      <td>70.0</td>\n",
       "      <td>23.388687</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>178</td>\n",
       "      <td>80.0</td>\n",
       "      <td>25.249337</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>70.0</td>\n",
       "      <td>24.221453</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>163</td>\n",
       "      <td>56.0</td>\n",
       "      <td>21.077195</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>35</td>\n",
       "      <td>2</td>\n",
       "      <td>156</td>\n",
       "      <td>53.0</td>\n",
       "      <td>21.778435</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>976</th>\n",
       "      <td>32</td>\n",
       "      <td>2</td>\n",
       "      <td>153</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.776795</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>980</th>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>80.0</td>\n",
       "      <td>30.110279</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>981</th>\n",
       "      <td>38</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>60.0</td>\n",
       "      <td>21.007668</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>157</td>\n",
       "      <td>80.0</td>\n",
       "      <td>32.455678</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 108 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Q1.age  Q3.gender  Q4.height.cm  Q4.weight.kg     Q4.BMI  \\\n",
       "1        21          2           155          57.0  23.725286   \n",
       "9        24          2           173          70.0  23.388687   \n",
       "11       27          1           178          80.0  25.249337   \n",
       "17       38          1           170          70.0  24.221453   \n",
       "18       27          2           163          56.0  21.077195   \n",
       "..      ...        ...           ...           ...        ...   \n",
       "973      35          2           156          53.0  21.778435   \n",
       "976      32          2           153          58.0  24.776795   \n",
       "980      34          1           163          80.0  30.110279   \n",
       "981      38          2           169          60.0  21.007668   \n",
       "992      24          2           157          80.0  32.455678   \n",
       "\n",
       "     Q5.time.since.started.supplement.consumption  \\\n",
       "1                                               3   \n",
       "9                                               2   \n",
       "11                                              4   \n",
       "17                                              3   \n",
       "18                                              3   \n",
       "..                                            ...   \n",
       "973                                             5   \n",
       "976                                             3   \n",
       "980                                             4   \n",
       "981                                             5   \n",
       "992                                             2   \n",
       "\n",
       "     Q6.frequency.weekly.physical.activity  Q7.aerobox  Q7.trx  Q7.crossfit  \\\n",
       "1                                        3           0       0            0   \n",
       "9                                        5           0       0            1   \n",
       "11                                       7           1       1            0   \n",
       "17                                       5           0       0            0   \n",
       "18                                       4           0       1            1   \n",
       "..                                     ...         ...     ...          ...   \n",
       "973                                      4           0       0            0   \n",
       "976                                      3           0       0            0   \n",
       "980                                      4           0       0            0   \n",
       "981                                      5           0       0            0   \n",
       "992                                      5           0       1            0   \n",
       "\n",
       "     ...  Q21.store.choice.assortment  Q21.store.choice.salesperson.expertise  \\\n",
       "1    ...                            1                                       1   \n",
       "9    ...                            1                                       1   \n",
       "11   ...                            1                                       1   \n",
       "17   ...                            1                                       1   \n",
       "18   ...                            0                                       1   \n",
       "..   ...                          ...                                     ...   \n",
       "973  ...                            1                                       1   \n",
       "976  ...                            0                                       1   \n",
       "980  ...                            0                                       1   \n",
       "981  ...                            1                                       1   \n",
       "992  ...                            1                                       0   \n",
       "\n",
       "     Q21.store.choice.attractiveness.store  Q21.store.choice.service  \\\n",
       "1                                        1                         1   \n",
       "9                                        0                         1   \n",
       "11                                       0                         1   \n",
       "17                                       0                         0   \n",
       "18                                       1                         1   \n",
       "..                                     ...                       ...   \n",
       "973                                      0                         1   \n",
       "976                                      0                         0   \n",
       "980                                      0                         1   \n",
       "981                                      1                         1   \n",
       "992                                      1                         1   \n",
       "\n",
       "     Q21.store.choice.legitimate.original.products  \\\n",
       "1                                                1   \n",
       "9                                                0   \n",
       "11                                               1   \n",
       "17                                               0   \n",
       "18                                               1   \n",
       "..                                             ...   \n",
       "973                                              1   \n",
       "976                                              1   \n",
       "980                                              0   \n",
       "981                                              1   \n",
       "992                                              1   \n",
       "\n",
       "     Q21.store.choice.good.prices  Q21.store.choice.ease.purchase  \\\n",
       "1                               1                               1   \n",
       "9                               1                               0   \n",
       "11                              1                               0   \n",
       "17                              1                               0   \n",
       "18                              0                               0   \n",
       "..                            ...                             ...   \n",
       "973                             1                               1   \n",
       "976                             1                               0   \n",
       "980                             1                               0   \n",
       "981                             1                               1   \n",
       "992                             1                               1   \n",
       "\n",
       "     Q22.income.monthly  Q23.expenditure.supplements  Cluster_label  \n",
       "1                     1                            4              1  \n",
       "9                     2                            4              1  \n",
       "11                    2                            5              1  \n",
       "17                    1                            3              1  \n",
       "18                    2                            4              1  \n",
       "..                  ...                          ...            ...  \n",
       "973                   1                            5              1  \n",
       "976                   1                            4              1  \n",
       "980                   2                            4              1  \n",
       "981                   1                            4              1  \n",
       "992                   1                            5              1  \n",
       "\n",
       "[193 rows x 108 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[df_1['Cluster_label']==1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5544908c-55d6-45b1-95c0-7c1d3eb5e7a1",
   "metadata": {},
   "source": [
    "## Generative Modelling\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "06a7e4c2-f06e-4131-8a63-fdd5694d7bed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.18952239,  0.21641702, -0.37285035, ...,  0.65365234,\n",
       "         1.4232486 ,  0.57161258],\n",
       "       [-1.1095561 ,  0.28077431,  1.16999818, ..., -0.05172339,\n",
       "        -1.95062486,  1.26917517],\n",
       "       [-1.2787    , -0.08410194,  0.54418532, ...,  1.08335647,\n",
       "        -0.16939198,  1.3466841 ],\n",
       "       ...,\n",
       "       [ 1.03575372,  0.39813758,  0.2457439 , ..., -1.41609469,\n",
       "        -0.44200154, -0.25358778],\n",
       "       [-0.47647248,  1.69589323, -1.57068902, ...,  0.60473239,\n",
       "        -1.31601893,  1.14115055],\n",
       "       [-1.01142118,  1.08600906,  0.13503434, ..., -0.36435009,\n",
       "         0.20342266,  1.1477176 ]])"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_new,y_new=gmm.sample(10000)\n",
    "X_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "70a7e340-a285-47bf-9183-72d1dd44921c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
